# generated by datamodel-codegen:
#   filename:  openapi_vapi_schema_api.json
#   timestamp: 2024-12-29T03:58:30+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class Bearer(BaseModel):
    scheme: str
    bearerFormat: str
    type: str
    description: str


class SecuritySchemes(BaseModel):
    bearer: Bearer


class Provider(BaseModel):
    type: str
    description: str
    enum: List[str]


class Language(BaseModel):
    type: str
    description: str
    enum: List[str]


class RealtimeUrl(BaseModel):
    type: str
    description: str


class Items(BaseModel):
    type: str
    maxLength: int


class WordBoost(BaseModel):
    description: str
    type: str
    items: Items


class EndUtteranceSilenceThreshold(BaseModel):
    type: str
    description: str


class DisablePartialTranscripts(BaseModel):
    type: str
    description: str


class Properties(BaseModel):
    provider: Provider
    language: Language
    realtimeUrl: RealtimeUrl
    wordBoost: WordBoost
    endUtteranceSilenceThreshold: EndUtteranceSilenceThreshold
    disablePartialTranscripts: DisablePartialTranscripts


class AssemblyAITranscriber(BaseModel):
    type: str
    properties: Properties
    required: List[str]


class TimeoutSeconds(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: int


class Url(BaseModel):
    type: str
    description: str


class Secret(BaseModel):
    type: str
    description: str


class Headers(BaseModel):
    type: str
    description: str


class Properties1(BaseModel):
    timeoutSeconds: TimeoutSeconds
    url: Url
    secret: Secret
    headers: Headers


class Server(BaseModel):
    type: str
    properties: Properties1
    required: List[str]


class AllOfItem(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Server1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties2(BaseModel):
    provider: Provider
    server: Server1


class CustomTranscriber(BaseModel):
    type: str
    properties: Properties2
    required: List[str]


class OneOfItem(BaseModel):
    type: str
    enum: Optional[List[str]] = None


class Model1(BaseModel):
    description: str
    oneOf: List[OneOfItem]


class SmartFormat(BaseModel):
    type: str
    description: str
    example: bool


class CodeSwitchingEnabled(BaseModel):
    type: str
    description: str
    example: bool


class Items1(BaseModel):
    type: str
    pattern: str


class Keywords(BaseModel):
    description: str
    type: str
    items: Items1


class Endpointing(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class Properties3(BaseModel):
    provider: Provider
    model: Model1
    language: Language
    smartFormat: SmartFormat
    codeSwitchingEnabled: CodeSwitchingEnabled
    keywords: Keywords
    endpointing: Endpointing


class DeepgramTranscriber(BaseModel):
    type: str
    properties: Properties3
    required: List[str]


class Model2(BaseModel):
    type: str
    description: str
    enum: List[str]


class Properties4(BaseModel):
    provider: Provider
    model: Model2
    language: Language


class TalkscriberTranscriber(BaseModel):
    type: str
    properties: Properties4
    required: List[str]


class OneOfItem1(BaseModel):
    enum: List[str]


class Model3(BaseModel):
    description: str
    oneOf: List[OneOfItem1]


class OneOfItem2(BaseModel):
    type: str
    enum: List[str]


class LanguageBehaviour(BaseModel):
    description: str
    oneOf: List[OneOfItem2]


class TranscriptionHint(BaseModel):
    type: str
    description: str
    maxLength: int
    example: str


class Prosody(BaseModel):
    type: str
    description: str
    example: bool


class AudioEnhancer(BaseModel):
    type: str
    description: str
    example: bool


class Properties5(BaseModel):
    provider: Provider
    model: Model3
    languageBehaviour: LanguageBehaviour
    language: Language
    transcriptionHint: TranscriptionHint
    prosody: Prosody
    audioEnhancer: AudioEnhancer


class GladiaTranscriber(BaseModel):
    type: str
    properties: Properties5
    required: List[str]


class Type(BaseModel):
    type: str
    enum: List[str]


class Text(BaseModel):
    type: str


class Language4(BaseModel):
    type: str
    enum: List[str]


class Properties6(BaseModel):
    type: Type
    text: Text
    language: Language4


class TextContent(BaseModel):
    type: str
    properties: Properties6
    required: List[str]


class Operator(BaseModel):
    type: str
    description: str
    enum: List[str]


class Param(BaseModel):
    type: str
    description: str
    maxLength: int


class Value(BaseModel):
    type: str
    description: str
    maxLength: int


class Properties7(BaseModel):
    operator: Operator
    param: Param
    value: Value


class Condition(BaseModel):
    type: str
    properties: Properties7
    required: List[str]


class OneOfItem3(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    title: str


class Items2(BaseModel):
    oneOf: List[OneOfItem3]


class Contents(BaseModel):
    type: str
    description: str
    items: Items2


class Type1(BaseModel):
    type: str
    enum: List[str]
    description: str


class Content(BaseModel):
    type: str
    description: str
    maxLength: int


class Items3(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions(BaseModel):
    description: str
    type: str
    items: Items3


class Properties8(BaseModel):
    contents: Contents
    type: Type1
    content: Content
    conditions: Conditions


class ToolMessageStart(BaseModel):
    type: str
    properties: Properties8
    required: List[str]


class Items4(BaseModel):
    oneOf: List[OneOfItem3]


class Contents1(BaseModel):
    type: str
    description: str
    items: Items4


class Type2(BaseModel):
    type: str
    description: str
    enum: List[str]


class Role(BaseModel):
    type: str
    description: str
    enum: List[str]


class EndCallAfterSpokenEnabled(BaseModel):
    type: str
    description: str
    example: bool


class Items5(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions1(BaseModel):
    description: str
    type: str
    items: Items5


class Properties9(BaseModel):
    contents: Contents1
    type: Type2
    role: Role
    endCallAfterSpokenEnabled: EndCallAfterSpokenEnabled
    content: Content
    conditions: Conditions1


class ToolMessageComplete(BaseModel):
    type: str
    properties: Properties9
    required: List[str]


class Items6(BaseModel):
    oneOf: List[OneOfItem3]


class Contents2(BaseModel):
    type: str
    description: str
    items: Items6


class Items7(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions2(BaseModel):
    description: str
    type: str
    items: Items7


class Properties10(BaseModel):
    contents: Contents2
    type: Type2
    endCallAfterSpokenEnabled: EndCallAfterSpokenEnabled
    content: Content
    conditions: Conditions2


class ToolMessageFailed(BaseModel):
    type: str
    properties: Properties10
    required: List[str]


class Items8(BaseModel):
    oneOf: List[OneOfItem3]


class Contents3(BaseModel):
    type: str
    description: str
    items: Items8


class TimingMilliseconds(BaseModel):
    type: str
    minimum: int
    maximum: int
    example: int
    description: str


class Items9(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Conditions3(BaseModel):
    description: str
    type: str
    items: Items9


class Properties11(BaseModel):
    contents: Contents3
    type: Type2
    timingMilliseconds: TimingMilliseconds
    content: Content
    conditions: Conditions3


class ToolMessageDelayed(BaseModel):
    type: str
    properties: Properties11
    required: List[str]


class Items10(BaseModel):
    type: str
    description: str


class Properties13(BaseModel):
    type: str
    description: str


class Description(BaseModel):
    type: str
    description: str


class Items11(BaseModel):
    type: str


class Required(BaseModel):
    description: str
    type: str
    items: Items11


class Properties12(BaseModel):
    type: Type2
    items: Items10
    properties: Properties13
    description: Description
    required: Required


class JsonSchema(BaseModel):
    type: str
    properties: Properties12
    required: List[str]


class AdditionalProperties(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties15(BaseModel):
    type: str
    description: str
    additionalProperties: AdditionalProperties


class Required1(BaseModel):
    description: str
    type: str
    items: Items11


class Properties14(BaseModel):
    type: Type2
    properties: Properties15
    required: Required1


class OpenAIFunctionParameters(BaseModel):
    type: str
    properties: Properties14
    required: List[str]


class Strict(BaseModel):
    type: str
    description: str
    default: bool


class Name(BaseModel):
    type: str
    description: str
    maxLength: int
    pattern: str


class Description1(BaseModel):
    type: str
    description: str
    maxLength: int


class Parameters(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties16(BaseModel):
    strict: Strict
    name: Name
    description: Description1
    parameters: Parameters


class OpenAIFunction(BaseModel):
    type: str
    properties: Properties16
    required: List[str]


class Async(BaseModel):
    type: str
    description: str
    example: bool


class Items13(BaseModel):
    oneOf: List[OneOfItem3]


class Messages(BaseModel):
    type: str
    description: str
    items: Items13


class Type7(BaseModel):
    type: str
    enum: List[str]
    description: str


class Function(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties17(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages
    type: Type7
    function: Function
    server: Server2


class CreateDtmfToolDTO(BaseModel):
    type: str
    properties: Properties17
    required: List[str]


class Items14(BaseModel):
    oneOf: List[OneOfItem3]


class Messages1(BaseModel):
    type: str
    description: str
    items: Items14


class Function1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties18(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages1
    type: Type7
    function: Function1
    server: Server3


class CreateEndCallToolDTO(BaseModel):
    type: str
    properties: Properties18
    required: List[str]


class Items15(BaseModel):
    oneOf: List[OneOfItem3]


class Messages2(BaseModel):
    type: str
    description: str
    items: Items15


class Function2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties19(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages2
    type: Type7
    function: Function2
    server: Server4


class CreateVoicemailToolDTO(BaseModel):
    type: str
    properties: Properties19
    required: List[str]


class Items16(BaseModel):
    oneOf: List[OneOfItem3]


class Messages3(BaseModel):
    type: str
    description: str
    items: Items16


class Function3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties20(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages3
    type: Type7
    function: Function3
    server: Server5


class CreateFunctionToolDTO(BaseModel):
    type: str
    properties: Properties20
    required: List[str]


class WorkflowId(BaseModel):
    type: str


class LocationId(BaseModel):
    type: str


class Properties21(BaseModel):
    workflowId: WorkflowId
    locationId: LocationId


class GhlToolMetadata(BaseModel):
    type: str
    properties: Properties21


class Items17(BaseModel):
    oneOf: List[OneOfItem3]


class Messages4(BaseModel):
    type: str
    description: str
    items: Items17


class Metadata(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Function4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server6(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties22(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages4
    type: Type7
    metadata: Metadata
    function: Function4
    server: Server6


class CreateGhlToolDTO(BaseModel):
    type: str
    properties: Properties22
    required: List[str]


class ScenarioId(BaseModel):
    type: str


class TriggerHookId(BaseModel):
    type: str


class Properties23(BaseModel):
    scenarioId: ScenarioId
    triggerHookId: TriggerHookId


class MakeToolMetadata(BaseModel):
    type: str
    properties: Properties23


class Items18(BaseModel):
    oneOf: List[OneOfItem3]


class Messages5(BaseModel):
    type: str
    description: str
    items: Items18


class Function5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server7(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties24(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages5
    type: Type7
    metadata: Metadata
    function: Function5
    server: Server7


class CreateMakeToolDTO(BaseModel):
    type: str
    properties: Properties24
    required: List[str]


class Items19(BaseModel):
    oneOf: List[OneOfItem3]


class Contents4(BaseModel):
    type: str
    description: str
    items: Items19


class Type13(BaseModel):
    type: str
    description: str
    enum: List[str]


class Properties25(BaseModel):
    contents: Contents4
    type: Type13
    content: Content


class CustomMessage(BaseModel):
    type: str
    properties: Properties25
    required: List[str]


class OneOfItem14(BaseModel):
    type: Optional[str] = None
    field_ref: Optional[str] = Field(None, alias='$ref')


class Message(BaseModel):
    description: str
    oneOf: List[OneOfItem14]


class Type14(BaseModel):
    type: str
    enum: List[str]


class TransferMode(BaseModel):
    type: str
    description: str
    enum: List[str]


class AssistantName(BaseModel):
    type: str
    description: str


class Description2(BaseModel):
    type: str
    description: str


class Properties26(BaseModel):
    message: Message
    type: Type14
    transferMode: TransferMode
    assistantName: AssistantName
    description: Description2


class TransferDestinationAssistant(BaseModel):
    type: str
    properties: Properties26
    required: List[str]


class Message1(BaseModel):
    description: str
    oneOf: List[OneOfItem14]


class StepName(BaseModel):
    type: str
    description: str


class Properties27(BaseModel):
    message: Message1
    type: Type14
    stepName: StepName
    description: Description2


class TransferDestinationStep(BaseModel):
    type: str
    properties: Properties27
    required: List[str]


class Items20(BaseModel):
    type: str


class Messages6(BaseModel):
    description: str
    type: str
    items: Items20


class Enabled(BaseModel):
    type: str
    description: str


class TimeoutSeconds1(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class Properties28(BaseModel):
    messages: Messages6
    enabled: Enabled
    timeoutSeconds: TimeoutSeconds1


class SummaryPlan(BaseModel):
    type: str
    properties: Properties28


class Mode(BaseModel):
    type: str
    description: str
    enum: List[str]


class Message2(BaseModel):
    description: str
    oneOf: List[OneOfItem14]


class SummaryPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties29(BaseModel):
    mode: Mode
    message: Message2
    summaryPlan: SummaryPlan1


class TransferPlan(BaseModel):
    type: str
    properties: Properties29
    required: List[str]


class Message3(BaseModel):
    description: str
    oneOf: List[OneOfItem14]


class NumberE164CheckEnabled(BaseModel):
    type: str
    description: str
    default: bool


class Number(BaseModel):
    type: str
    description: str
    minLength: int
    maxLength: int


class Extension(BaseModel):
    type: str
    description: str
    minLength: int
    maxLength: int


class CallerId(BaseModel):
    type: str
    description: str
    maxLength: int


class TransferPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties30(BaseModel):
    message: Message3
    type: Type14
    numberE164CheckEnabled: NumberE164CheckEnabled
    number: Number
    extension: Extension
    callerId: CallerId
    transferPlan: TransferPlan1
    description: Description2


class TransferDestinationNumber(BaseModel):
    type: str
    properties: Properties30
    required: List[str]


class Message4(BaseModel):
    description: str
    oneOf: List[OneOfItem14]


class SipUri(BaseModel):
    type: str
    description: str


class TransferPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class SipHeaders(BaseModel):
    type: str
    description: str


class Properties31(BaseModel):
    message: Message4
    type: Type14
    sipUri: SipUri
    transferPlan: TransferPlan2
    sipHeaders: SipHeaders
    description: Description2


class TransferDestinationSip(BaseModel):
    type: str
    properties: Properties31
    required: List[str]


class OneOfItem19(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    title: str


class Items21(BaseModel):
    oneOf: List[OneOfItem19]


class Messages7(BaseModel):
    type: str
    description: str
    items: Items21


class Items22(BaseModel):
    oneOf: List[OneOfItem19]


class Destinations(BaseModel):
    type: str
    description: str
    items: Items22


class Function6(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server8(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties32(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages7
    type: Type14
    destinations: Destinations
    function: Function6
    server: Server8


class CreateTransferCallToolDTO(BaseModel):
    type: str
    properties: Properties32
    required: List[str]


class Server9(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties33(BaseModel):
    provider: Provider
    server: Server9


class CreateCustomKnowledgeBaseDTO(BaseModel):
    type: str
    properties: Properties33
    required: List[str]


class Content5(BaseModel):
    type: str
    nullable: bool
    maxLength: int


class Role1(BaseModel):
    type: str
    enum: List[str]


class Properties34(BaseModel):
    content: Content5
    role: Role1


class OpenAIMessage(BaseModel):
    type: str
    properties: Properties34
    required: List[str]


class Items23(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages8(BaseModel):
    description: str
    type: str
    items: Items23


class Items24(BaseModel):
    oneOf: List[OneOfItem19]


class Tools(BaseModel):
    type: str
    description: str
    items: Items24


class Items25(BaseModel):
    type: str


class ToolIds(BaseModel):
    description: str
    type: str
    items: Items25


class KnowledgeBase(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class KnowledgeBaseId(BaseModel):
    type: str
    description: str


class Provider6(BaseModel):
    type: str
    enum: List[str]


class Model4(BaseModel):
    type: str
    description: str


class Temperature(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class MaxTokens(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class EmotionRecognitionEnabled(BaseModel):
    type: str
    description: str


class NumFastTurns(BaseModel):
    type: str
    description: str
    minimum: int


class Properties35(BaseModel):
    messages: Messages8
    tools: Tools
    toolIds: ToolIds
    knowledgeBase: KnowledgeBase
    knowledgeBaseId: KnowledgeBaseId
    provider: Provider6
    model: Model4
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class AnyscaleModel(BaseModel):
    type: str
    properties: Properties35
    required: List[str]


class Items26(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages9(BaseModel):
    description: str
    type: str
    items: Items26


class Items27(BaseModel):
    oneOf: List[OneOfItem19]


class Tools1(BaseModel):
    type: str
    description: str
    items: Items27


class Items28(BaseModel):
    type: str


class ToolIds1(BaseModel):
    description: str
    type: str
    items: Items28


class KnowledgeBase1(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Model5(BaseModel):
    type: str
    description: str
    enum: List[str]


class Properties36(BaseModel):
    messages: Messages9
    tools: Tools1
    toolIds: ToolIds1
    knowledgeBase: KnowledgeBase1
    knowledgeBaseId: KnowledgeBaseId
    model: Model5
    provider: Provider6
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class AnthropicModel(BaseModel):
    type: str
    properties: Properties36
    required: List[str]


class Items29(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages10(BaseModel):
    description: str
    type: str
    items: Items29


class Items30(BaseModel):
    oneOf: List[OneOfItem19]


class Tools2(BaseModel):
    type: str
    description: str
    items: Items30


class Items31(BaseModel):
    type: str


class ToolIds2(BaseModel):
    description: str
    type: str
    items: Items31


class KnowledgeBase2(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Provider8(BaseModel):
    type: str
    description: str
    enum: List[str]


class MetadataSendMode(BaseModel):
    type: str
    description: str
    enum: List[str]


class Model6(BaseModel):
    type: str
    description: str


class Properties37(BaseModel):
    messages: Messages10
    tools: Tools2
    toolIds: ToolIds2
    knowledgeBase: KnowledgeBase2
    knowledgeBaseId: KnowledgeBaseId
    provider: Provider8
    metadataSendMode: MetadataSendMode
    url: Url
    model: Model6
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class CustomLLMModel(BaseModel):
    type: str
    properties: Properties37
    required: List[str]


class Items32(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages11(BaseModel):
    description: str
    type: str
    items: Items32


class Items33(BaseModel):
    oneOf: List[OneOfItem19]


class Tools3(BaseModel):
    type: str
    description: str
    items: Items33


class Items34(BaseModel):
    type: str


class ToolIds3(BaseModel):
    description: str
    type: str
    items: Items34


class KnowledgeBase3(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Provider9(BaseModel):
    type: str
    enum: List[str]


class Properties38(BaseModel):
    messages: Messages11
    tools: Tools3
    toolIds: ToolIds3
    knowledgeBase: KnowledgeBase3
    knowledgeBaseId: KnowledgeBaseId
    provider: Provider9
    model: Model6
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class DeepInfraModel(BaseModel):
    type: str
    properties: Properties38
    required: List[str]


class Items35(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages12(BaseModel):
    description: str
    type: str
    items: Items35


class Items36(BaseModel):
    oneOf: List[OneOfItem19]


class Tools4(BaseModel):
    type: str
    description: str
    items: Items36


class Items37(BaseModel):
    type: str


class ToolIds4(BaseModel):
    description: str
    type: str
    items: Items37


class KnowledgeBase4(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Model8(BaseModel):
    type: str
    description: str
    enum: List[str]


class Properties39(BaseModel):
    messages: Messages12
    tools: Tools4
    toolIds: ToolIds4
    knowledgeBase: KnowledgeBase4
    knowledgeBaseId: KnowledgeBaseId
    model: Model8
    provider: Provider9
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class GoogleModel(BaseModel):
    type: str
    properties: Properties39
    required: List[str]


class Items38(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages13(BaseModel):
    description: str
    type: str
    items: Items38


class Items39(BaseModel):
    oneOf: List[OneOfItem19]


class Tools5(BaseModel):
    type: str
    description: str
    items: Items39


class Items40(BaseModel):
    type: str


class ToolIds5(BaseModel):
    description: str
    type: str
    items: Items40


class KnowledgeBase5(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Properties40(BaseModel):
    messages: Messages13
    tools: Tools5
    toolIds: ToolIds5
    knowledgeBase: KnowledgeBase5
    knowledgeBaseId: KnowledgeBaseId
    model: Model8
    provider: Provider9
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class GroqModel(BaseModel):
    type: str
    properties: Properties40
    required: List[str]


class Items41(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages14(BaseModel):
    description: str
    type: str
    items: Items41


class Items42(BaseModel):
    oneOf: List[OneOfItem19]


class Tools6(BaseModel):
    type: str
    description: str
    items: Items42


class Items43(BaseModel):
    type: str


class ToolIds6(BaseModel):
    description: str
    type: str
    items: Items43


class KnowledgeBase6(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Properties41(BaseModel):
    messages: Messages14
    tools: Tools6
    toolIds: ToolIds6
    knowledgeBase: KnowledgeBase6
    knowledgeBaseId: KnowledgeBaseId
    model: Model8
    provider: Provider9
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class InflectionAIModel(BaseModel):
    type: str
    properties: Properties41
    required: List[str]


class Items44(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages15(BaseModel):
    description: str
    type: str
    items: Items44


class Items45(BaseModel):
    oneOf: List[OneOfItem19]


class Tools7(BaseModel):
    type: str
    description: str
    items: Items45


class Items46(BaseModel):
    type: str


class ToolIds7(BaseModel):
    description: str
    type: str
    items: Items46


class KnowledgeBase7(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Provider13(BaseModel):
    type: str
    description: str
    enum: List[str]


class Items47(BaseModel):
    type: str
    enum: List[str]


class FallbackModels(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: List[str]
    items: Items47


class SemanticCachingEnabled(BaseModel):
    type: str
    example: bool


class Properties42(BaseModel):
    messages: Messages15
    tools: Tools7
    toolIds: ToolIds7
    knowledgeBase: KnowledgeBase7
    knowledgeBaseId: KnowledgeBaseId
    provider: Provider13
    model: Model8
    fallbackModels: FallbackModels
    semanticCachingEnabled: SemanticCachingEnabled
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class OpenAIModel(BaseModel):
    type: str
    properties: Properties42
    required: List[str]


class Items48(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages16(BaseModel):
    description: str
    type: str
    items: Items48


class Items49(BaseModel):
    oneOf: List[OneOfItem19]


class Tools8(BaseModel):
    type: str
    description: str
    items: Items49


class Items50(BaseModel):
    type: str


class ToolIds8(BaseModel):
    description: str
    type: str
    items: Items50


class KnowledgeBase8(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Provider14(BaseModel):
    type: str
    enum: List[str]


class Model12(BaseModel):
    type: str
    description: str


class Properties43(BaseModel):
    messages: Messages16
    tools: Tools8
    toolIds: ToolIds8
    knowledgeBase: KnowledgeBase8
    knowledgeBaseId: KnowledgeBaseId
    provider: Provider14
    model: Model12
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class OpenRouterModel(BaseModel):
    type: str
    properties: Properties43
    required: List[str]


class Items51(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages17(BaseModel):
    description: str
    type: str
    items: Items51


class Items52(BaseModel):
    oneOf: List[OneOfItem19]


class Tools9(BaseModel):
    type: str
    description: str
    items: Items52


class Items53(BaseModel):
    type: str


class ToolIds9(BaseModel):
    description: str
    type: str
    items: Items53


class KnowledgeBase9(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Properties44(BaseModel):
    messages: Messages17
    tools: Tools9
    toolIds: ToolIds9
    knowledgeBase: KnowledgeBase9
    knowledgeBaseId: KnowledgeBaseId
    provider: Provider14
    model: Model12
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class PerplexityAIModel(BaseModel):
    type: str
    properties: Properties44
    required: List[str]


class Items54(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages18(BaseModel):
    description: str
    type: str
    items: Items54


class Items55(BaseModel):
    oneOf: List[OneOfItem19]


class Tools10(BaseModel):
    type: str
    description: str
    items: Items55


class Items56(BaseModel):
    type: str


class ToolIds10(BaseModel):
    description: str
    type: str
    items: Items56


class KnowledgeBase10(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Properties45(BaseModel):
    messages: Messages18
    tools: Tools10
    toolIds: ToolIds10
    knowledgeBase: KnowledgeBase10
    knowledgeBaseId: KnowledgeBaseId
    provider: Provider14
    model: Model12
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class TogetherAIModel(BaseModel):
    type: str
    properties: Properties45
    required: List[str]


class Items57(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages19(BaseModel):
    description: str
    type: str
    items: Items57


class Items58(BaseModel):
    oneOf: List[OneOfItem19]


class Tools11(BaseModel):
    type: str
    description: str
    items: Items58


class Items59(BaseModel):
    type: str


class ToolIds11(BaseModel):
    description: str
    type: str
    items: Items59


class KnowledgeBase11(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Items60(BaseModel):
    oneOf: List[OneOfItem19]


class Steps(BaseModel):
    type: str
    items: Items60


class Properties46(BaseModel):
    messages: Messages19
    tools: Tools11
    toolIds: ToolIds11
    knowledgeBase: KnowledgeBase11
    knowledgeBaseId: KnowledgeBaseId
    steps: Steps
    provider: Provider14
    model: Model12
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class VapiModel(BaseModel):
    type: str
    properties: Properties46
    required: List[str]


class Items61(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Messages20(BaseModel):
    description: str
    type: str
    items: Items61


class Items62(BaseModel):
    oneOf: List[OneOfItem19]


class Tools12(BaseModel):
    type: str
    description: str
    items: Items62


class Items63(BaseModel):
    type: str


class ToolIds12(BaseModel):
    description: str
    type: str
    items: Items63


class KnowledgeBase12(BaseModel):
    description: str
    oneOf: List[OneOfItem19]


class Model16(BaseModel):
    type: str
    description: str
    enum: List[str]


class Properties47(BaseModel):
    messages: Messages20
    tools: Tools12
    toolIds: ToolIds12
    knowledgeBase: KnowledgeBase12
    knowledgeBaseId: KnowledgeBaseId
    model: Model16
    provider: Provider14
    temperature: Temperature
    maxTokens: MaxTokens
    emotionRecognitionEnabled: EmotionRecognitionEnabled
    numFastTurns: NumFastTurns


class XaiModel(BaseModel):
    type: str
    properties: Properties47
    required: List[str]


class Type19(BaseModel):
    type: str
    description: str
    enum: List[str]


class Key(BaseModel):
    type: str
    description: str


class Properties48(BaseModel):
    type: Type19
    key: Key
    value: Value


class ExactReplacement(BaseModel):
    type: str
    properties: Properties48
    required: List[str]


class Properties49(BaseModel):
    type: Type19
    enabled: Enabled


class RegexOption(BaseModel):
    type: str
    properties: Properties49
    required: List[str]


class Regex(BaseModel):
    type: str
    description: str


class Items64(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Options(BaseModel):
    description: str
    type: str
    items: Items64


class Properties50(BaseModel):
    type: Type19
    regex: Regex
    options: Options
    value: Value


class RegexReplacement(BaseModel):
    type: str
    properties: Properties50
    required: List[str]


class Enabled2(BaseModel):
    type: str
    description: str
    example: bool


class NumberToDigitsCutoff(BaseModel):
    type: str
    description: str
    minimum: int
    example: int


class Items65(BaseModel):
    oneOf: List[OneOfItem19]


class Replacements(BaseModel):
    type: str
    description: str
    items: Items65


class Properties51(BaseModel):
    enabled: Enabled2
    numberToDigitsCutoff: NumberToDigitsCutoff
    replacements: Replacements


class FormatPlan(BaseModel):
    type: str
    properties: Properties51


class MinCharacters(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: int


class Items66(BaseModel):
    type: str
    enum: List[str]


class PunctuationBoundaries(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: List[str]
    items: Items66


class FormatPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties52(BaseModel):
    enabled: Enabled2
    minCharacters: MinCharacters
    punctuationBoundaries: PunctuationBoundaries
    formatPlan: FormatPlan1


class ChunkPlan(BaseModel):
    type: str
    properties: Properties52


class Items67(BaseModel):
    oneOf: List[OneOfItem19]


class Voices(BaseModel):
    type: str
    description: str
    items: Items67


class Properties53(BaseModel):
    voices: Voices


class FallbackPlan(BaseModel):
    type: str
    properties: Properties53
    required: List[str]


class Provider19(BaseModel):
    type: str
    description: str
    enum: List[str]


class OneOfItem50(BaseModel):
    type: str
    enum: Optional[List[str]] = None
    title: str


class VoiceId(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class ChunkPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Speed(BaseModel):
    type: str
    description: str
    minimum: float
    maximum: int


class FallbackPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties54(BaseModel):
    provider: Provider19
    voiceId: VoiceId
    chunkPlan: ChunkPlan1
    speed: Speed
    fallbackPlan: FallbackPlan1


class AzureVoice(BaseModel):
    type: str
    properties: Properties54
    required: List[str]


class Model17(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: str


class Language5(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: str


class ChunkPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class VoiceId1(BaseModel):
    type: str
    description: str


class FallbackPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties55(BaseModel):
    provider: Provider19
    model: Model17
    language: Language5
    chunkPlan: ChunkPlan2
    voiceId: VoiceId1
    fallbackPlan: FallbackPlan2


class CartesiaVoice(BaseModel):
    type: str
    properties: Properties55
    required: List[str]


class ChunkPlan3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server10(BaseModel):
    description: str
    allOf: List[AllOfItem]


class FallbackPlan3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties56(BaseModel):
    provider: Provider19
    chunkPlan: ChunkPlan3
    server: Server10
    fallbackPlan: FallbackPlan3


class CustomVoice(BaseModel):
    type: str
    properties: Properties56
    required: List[str]


class VoiceId2(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class ChunkPlan4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class FallbackPlan4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties57(BaseModel):
    provider: Provider19
    voiceId: VoiceId2
    chunkPlan: ChunkPlan4
    fallbackPlan: FallbackPlan4


class DeepgramVoice(BaseModel):
    type: str
    properties: Properties57
    required: List[str]


class VoiceId3(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class Stability(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: float


class SimilarityBoost(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: float


class Style(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: int


class UseSpeakerBoost(BaseModel):
    type: str
    description: str
    example: bool


class OptimizeStreamingLatency(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: int


class EnableSsmlParsing(BaseModel):
    type: str
    description: str
    example: bool


class ChunkPlan5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Language6(BaseModel):
    type: str
    description: str


class FallbackPlan5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties58(BaseModel):
    provider: Provider19
    voiceId: VoiceId3
    stability: Stability
    similarityBoost: SimilarityBoost
    style: Style
    useSpeakerBoost: UseSpeakerBoost
    optimizeStreamingLatency: OptimizeStreamingLatency
    enableSsmlParsing: EnableSsmlParsing
    model: Model17
    chunkPlan: ChunkPlan5
    language: Language6
    fallbackPlan: FallbackPlan5


class ElevenLabsVoice(BaseModel):
    type: str
    properties: Properties58
    required: List[str]


class VoiceId4(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class Speed1(BaseModel):
    type: str
    description: str
    minimum: float
    maximum: int
    example: None


class ChunkPlan6(BaseModel):
    description: str
    allOf: List[AllOfItem]


class FallbackPlan6(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties59(BaseModel):
    provider: Provider19
    voiceId: VoiceId4
    speed: Speed1
    chunkPlan: ChunkPlan6
    fallbackPlan: FallbackPlan6


class LMNTVoice(BaseModel):
    type: str
    properties: Properties59
    required: List[str]


class VoiceId5(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class ChunkPlan7(BaseModel):
    description: str
    allOf: List[AllOfItem]


class FallbackPlan7(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties60(BaseModel):
    provider: Provider19
    voiceId: VoiceId5
    chunkPlan: ChunkPlan7
    fallbackPlan: FallbackPlan7


class NeetsVoice(BaseModel):
    type: str
    properties: Properties60
    required: List[str]


class VoiceId6(BaseModel):
    description: str
    enum: List[str]
    oneOf: List[OneOfItem50]


class ChunkPlan8(BaseModel):
    description: str
    allOf: List[AllOfItem]


class FallbackPlan8(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties61(BaseModel):
    provider: Provider19
    voiceId: VoiceId6
    speed: Speed1
    chunkPlan: ChunkPlan8
    fallbackPlan: FallbackPlan8


class OpenAIVoice(BaseModel):
    type: str
    properties: Properties61
    required: List[str]


class VoiceId7(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class Temperature13(BaseModel):
    type: str
    description: str
    minimum: float
    maximum: int
    example: None


class Emotion(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: None


class VoiceGuidance(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: None


class StyleGuidance(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: None


class TextGuidance(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: None


class Model19(BaseModel):
    type: str
    description: str
    enum: List[str]


class Language7(BaseModel):
    type: str
    description: str
    enum: List[str]


class ChunkPlan9(BaseModel):
    description: str
    allOf: List[AllOfItem]


class FallbackPlan9(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties62(BaseModel):
    provider: Provider19
    voiceId: VoiceId7
    speed: Speed1
    temperature: Temperature13
    emotion: Emotion
    voiceGuidance: VoiceGuidance
    styleGuidance: StyleGuidance
    textGuidance: TextGuidance
    model: Model19
    language: Language7
    chunkPlan: ChunkPlan9
    fallbackPlan: FallbackPlan9


class PlayHTVoice(BaseModel):
    type: str
    properties: Properties62
    required: List[str]


class VoiceId8(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class Model20(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: str


class Speed4(BaseModel):
    type: str
    description: str
    minimum: float
    example: None


class ChunkPlan10(BaseModel):
    description: str
    allOf: List[AllOfItem]


class FallbackPlan10(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties63(BaseModel):
    provider: Provider19
    voiceId: VoiceId8
    model: Model20
    speed: Speed4
    chunkPlan: ChunkPlan10
    fallbackPlan: FallbackPlan10


class RimeAIVoice(BaseModel):
    type: str
    properties: Properties63
    required: List[str]


class MaxCallDuration(BaseModel):
    type: str
    description: str


class ParticipantLeftTimeout(BaseModel):
    type: str
    description: str


class ParticipantAbsentTimeout(BaseModel):
    type: str
    description: str


class EnableRecording(BaseModel):
    type: str
    description: str


class EnableTranscription(BaseModel):
    type: str
    description: str


class ApplyGreenscreen(BaseModel):
    type: str
    description: str


class Language8(BaseModel):
    type: str
    description: str


class RecordingS3BucketName(BaseModel):
    type: str
    description: str


class RecordingS3BucketRegion(BaseModel):
    type: str
    description: str


class AwsAssumeRoleArn(BaseModel):
    type: str
    description: str


class Properties64(BaseModel):
    maxCallDuration: MaxCallDuration
    participantLeftTimeout: ParticipantLeftTimeout
    participantAbsentTimeout: ParticipantAbsentTimeout
    enableRecording: EnableRecording
    enableTranscription: EnableTranscription
    applyGreenscreen: ApplyGreenscreen
    language: Language8
    recordingS3BucketName: RecordingS3BucketName
    recordingS3BucketRegion: RecordingS3BucketRegion
    awsAssumeRoleArn: AwsAssumeRoleArn


class TavusConversationProperties(BaseModel):
    type: str
    properties: Properties64


class VoiceId9(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class ChunkPlan11(BaseModel):
    description: str
    allOf: List[AllOfItem]


class PersonaId(BaseModel):
    type: str
    description: str


class CallbackUrl(BaseModel):
    type: str
    description: str


class ConversationName(BaseModel):
    type: str
    description: str


class ConversationalContext(BaseModel):
    type: str
    description: str


class CustomGreeting(BaseModel):
    type: str
    description: str


class Properties66(BaseModel):
    description: str
    allOf: List[AllOfItem]


class FallbackPlan11(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties65(BaseModel):
    provider: Provider19
    voiceId: VoiceId9
    chunkPlan: ChunkPlan11
    personaId: PersonaId
    callbackUrl: CallbackUrl
    conversationName: ConversationName
    conversationalContext: ConversationalContext
    customGreeting: CustomGreeting
    properties: Properties66
    fallbackPlan: FallbackPlan11


class TavusVoice(BaseModel):
    type: str
    properties: Properties65
    required: List[str]


class VoiceId10(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class Speed5(BaseModel):
    type: str
    description: str
    minimum: float
    maximum: int


class ChunkPlan12(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties67(BaseModel):
    provider: Provider19
    voiceId: VoiceId10
    speed: Speed5
    chunkPlan: ChunkPlan12


class FallbackAzureVoice(BaseModel):
    type: str
    properties: Properties67
    required: List[str]


class Language9(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: str


class VoiceId11(BaseModel):
    type: str
    description: str


class ChunkPlan13(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties68(BaseModel):
    provider: Provider19
    model: Model20
    language: Language9
    voiceId: VoiceId11
    chunkPlan: ChunkPlan13


class FallbackCartesiaVoice(BaseModel):
    type: str
    properties: Properties68
    required: List[str]


class Server11(BaseModel):
    description: str
    allOf: List[AllOfItem]


class ChunkPlan14(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties69(BaseModel):
    provider: Provider19
    server: Server11
    chunkPlan: ChunkPlan14


class FallbackCustomVoice(BaseModel):
    type: str
    properties: Properties69
    required: List[str]


class VoiceId12(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class ChunkPlan15(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties70(BaseModel):
    provider: Provider19
    voiceId: VoiceId12
    chunkPlan: ChunkPlan15


class FallbackDeepgramVoice(BaseModel):
    type: str
    properties: Properties70
    required: List[str]


class VoiceId13(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class Language10(BaseModel):
    type: str
    description: str


class ChunkPlan16(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties71(BaseModel):
    provider: Provider19
    voiceId: VoiceId13
    stability: Stability
    similarityBoost: SimilarityBoost
    style: Style
    useSpeakerBoost: UseSpeakerBoost
    optimizeStreamingLatency: OptimizeStreamingLatency
    enableSsmlParsing: EnableSsmlParsing
    model: Model20
    language: Language10
    chunkPlan: ChunkPlan16


class FallbackElevenLabsVoice(BaseModel):
    type: str
    properties: Properties71
    required: List[str]


class VoiceId14(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class Speed6(BaseModel):
    type: str
    description: str
    minimum: float
    maximum: int
    example: None


class ChunkPlan17(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties72(BaseModel):
    provider: Provider19
    voiceId: VoiceId14
    speed: Speed6
    chunkPlan: ChunkPlan17


class FallbackLMNTVoice(BaseModel):
    type: str
    properties: Properties72
    required: List[str]


class VoiceId15(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class ChunkPlan18(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties73(BaseModel):
    provider: Provider19
    voiceId: VoiceId15
    chunkPlan: ChunkPlan18


class FallbackNeetsVoice(BaseModel):
    type: str
    properties: Properties73
    required: List[str]


class VoiceId16(BaseModel):
    description: str
    enum: List[str]
    oneOf: List[OneOfItem50]


class ChunkPlan19(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties74(BaseModel):
    provider: Provider19
    voiceId: VoiceId16
    speed: Speed6
    chunkPlan: ChunkPlan19


class FallbackOpenAIVoice(BaseModel):
    type: str
    properties: Properties74
    required: List[str]


class VoiceId17(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class Model23(BaseModel):
    type: str
    description: str
    enum: List[str]


class Language11(BaseModel):
    type: str
    description: str
    enum: List[str]


class ChunkPlan20(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties75(BaseModel):
    provider: Provider19
    voiceId: VoiceId17
    speed: Speed6
    temperature: Temperature13
    emotion: Emotion
    voiceGuidance: VoiceGuidance
    styleGuidance: StyleGuidance
    textGuidance: TextGuidance
    model: Model23
    language: Language11
    chunkPlan: ChunkPlan20


class FallbackPlayHTVoice(BaseModel):
    type: str
    properties: Properties75
    required: List[str]


class VoiceId18(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class Model24(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: str


class Speed9(BaseModel):
    type: str
    description: str
    minimum: float
    example: None


class ChunkPlan21(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties76(BaseModel):
    provider: Provider19
    voiceId: VoiceId18
    model: Model24
    speed: Speed9
    chunkPlan: ChunkPlan21


class FallbackRimeAIVoice(BaseModel):
    type: str
    properties: Properties76
    required: List[str]


class VoiceId19(BaseModel):
    description: str
    oneOf: List[OneOfItem50]


class Properties78(BaseModel):
    description: str
    allOf: List[AllOfItem]


class ChunkPlan22(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties77(BaseModel):
    provider: Provider19
    voiceId: VoiceId19
    personaId: PersonaId
    callbackUrl: CallbackUrl
    conversationName: ConversationName
    conversationalContext: ConversationalContext
    customGreeting: CustomGreeting
    properties: Properties78
    chunkPlan: ChunkPlan22


class FallbackTavusVoice(BaseModel):
    type: str
    properties: Properties77
    required: List[str]


class Provider41(BaseModel):
    type: str
    enum: List[str]


class Timeout(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: int


class Record(BaseModel):
    type: str
    description: str
    example: bool


class RecordingChannels(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: str


class Properties79(BaseModel):
    provider: Provider41
    timeout: Timeout
    record: Record
    recordingChannels: RecordingChannels


class TransportConfigurationTwilio(BaseModel):
    type: str
    properties: Properties79
    required: List[str]


class Provider42(BaseModel):
    type: str
    description: str
    enum: List[str]


class Items68(BaseModel):
    type: str
    enum: List[str]


class VoicemailDetectionTypes(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: List[str]
    items: Items68


class Enabled4(BaseModel):
    type: str
    description: str


class MachineDetectionTimeout(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class MachineDetectionSpeechThreshold(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class MachineDetectionSpeechEndThreshold(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class MachineDetectionSilenceTimeout(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class Properties80(BaseModel):
    provider: Provider42
    voicemailDetectionTypes: VoicemailDetectionTypes
    enabled: Enabled4
    machineDetectionTimeout: MachineDetectionTimeout
    machineDetectionSpeechThreshold: MachineDetectionSpeechThreshold
    machineDetectionSpeechEndThreshold: MachineDetectionSpeechEndThreshold
    machineDetectionSilenceTimeout: MachineDetectionSilenceTimeout


class TwilioVoicemailDetection(BaseModel):
    type: str
    properties: Properties80
    required: List[str]


class Items69(BaseModel):
    type: str


class Messages21(BaseModel):
    description: str
    type: str
    items: Items69


class Schema(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties81(BaseModel):
    messages: Messages21
    enabled: Enabled4
    schema_: Schema = Field(..., alias='schema')
    timeoutSeconds: TimeoutSeconds1


class StructuredDataPlan(BaseModel):
    type: str
    properties: Properties81


class Rubric(BaseModel):
    type: str
    enum: List[str]
    description: str


class Messages22(BaseModel):
    description: str
    type: str
    items: Items69


class Properties82(BaseModel):
    rubric: Rubric
    messages: Messages22
    enabled: Enabled4
    timeoutSeconds: TimeoutSeconds1


class SuccessEvaluationPlan(BaseModel):
    type: str
    properties: Properties82


class SummaryPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class StructuredDataPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class SuccessEvaluationPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties83(BaseModel):
    summaryPlan: SummaryPlan2
    structuredDataPlan: StructuredDataPlan1
    successEvaluationPlan: SuccessEvaluationPlan1


class AnalysisPlan(BaseModel):
    type: str
    properties: Properties83


class Enabled7(BaseModel):
    type: str
    description: str
    example: bool


class UserName(BaseModel):
    type: str
    description: str


class Properties84(BaseModel):
    enabled: Enabled7
    assistantName: AssistantName
    userName: UserName


class TranscriptPlan(BaseModel):
    type: str
    properties: Properties84


class RecordingEnabled(BaseModel):
    type: str
    description: str
    example: bool


class VideoRecordingEnabled(BaseModel):
    type: str
    description: str
    example: bool


class TranscriptPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class RecordingPath(BaseModel):
    type: str
    description: str


class Properties85(BaseModel):
    recordingEnabled: RecordingEnabled
    videoRecordingEnabled: VideoRecordingEnabled
    transcriptPlan: TranscriptPlan1
    recordingPath: RecordingPath


class ArtifactPlan(BaseModel):
    type: str
    properties: Properties85


class Items71(BaseModel):
    type: str
    maxLength: int


class IdleMessages(BaseModel):
    description: str
    type: str
    items: Items71


class IdleMessageMaxSpokenCount(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class IdleTimeoutSeconds(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class Properties86(BaseModel):
    idleMessages: IdleMessages
    idleMessageMaxSpokenCount: IdleMessageMaxSpokenCount
    idleTimeoutSeconds: IdleTimeoutSeconds


class MessagePlan(BaseModel):
    type: str
    properties: Properties86


class Items72(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class RegexOptions(BaseModel):
    description: str
    type: str
    items: Items72


class Properties87(BaseModel):
    type: Type19
    regex: Regex
    regexOptions: RegexOptions
    timeoutSeconds: TimeoutSeconds1


class AssistantCustomEndpointingRule(BaseModel):
    type: str
    properties: Properties87
    required: List[str]


class RegexOptions1(BaseModel):
    description: str
    type: str
    items: Items72


class Properties88(BaseModel):
    type: Type19
    regex: Regex
    regexOptions: RegexOptions1
    timeoutSeconds: TimeoutSeconds1


class CustomerCustomEndpointingRule(BaseModel):
    type: str
    properties: Properties88
    required: List[str]


class AssistantRegex(BaseModel):
    type: str
    description: str


class AssistantRegexOptions(BaseModel):
    description: str
    type: str
    items: Items72


class CustomerRegex(BaseModel):
    type: str


class CustomerRegexOptions(BaseModel):
    description: str
    type: str
    items: Items72


class Properties89(BaseModel):
    type: Type19
    assistantRegex: AssistantRegex
    assistantRegexOptions: AssistantRegexOptions
    customerRegex: CustomerRegex
    customerRegexOptions: CustomerRegexOptions
    timeoutSeconds: TimeoutSeconds1


class BothCustomEndpointingRule(BaseModel):
    type: str
    properties: Properties89
    required: List[str]


class OnPunctuationSeconds(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: float


class OnNoPunctuationSeconds(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: float


class OnNumberSeconds(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: float


class Properties90(BaseModel):
    onPunctuationSeconds: OnPunctuationSeconds
    onNoPunctuationSeconds: OnNoPunctuationSeconds
    onNumberSeconds: OnNumberSeconds


class TranscriptionEndpointingPlan(BaseModel):
    type: str
    properties: Properties90


class WaitSeconds(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: float


class SmartEndpointingEnabled(BaseModel):
    type: str
    description: str
    example: bool


class OneOfItem68(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    title: str


class Items76(BaseModel):
    oneOf: List[OneOfItem68]


class CustomEndpointingRules(BaseModel):
    type: str
    description: str
    items: Items76


class TranscriptionEndpointingPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties91(BaseModel):
    waitSeconds: WaitSeconds
    smartEndpointingEnabled: SmartEndpointingEnabled
    customEndpointingRules: CustomEndpointingRules
    transcriptionEndpointingPlan: TranscriptionEndpointingPlan1


class StartSpeakingPlan(BaseModel):
    type: str
    properties: Properties91


class NumWords(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: int


class VoiceSeconds(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: float
    example: float


class BackoffSeconds(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: int


class Properties92(BaseModel):
    numWords: NumWords
    voiceSeconds: VoiceSeconds
    backoffSeconds: BackoffSeconds


class StopSpeakingPlan(BaseModel):
    type: str
    properties: Properties92


class ListenEnabled(BaseModel):
    type: str
    description: str
    example: bool


class ControlEnabled(BaseModel):
    type: str
    description: str
    example: bool


class Properties93(BaseModel):
    listenEnabled: ListenEnabled
    controlEnabled: ControlEnabled


class MonitorPlan(BaseModel):
    type: str
    properties: Properties93


class Transcriber(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Model25(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Default(BaseModel):
    provider: str
    voiceId: str


class Voice(BaseModel):
    description: str
    oneOf: List[OneOfItem68]
    default: Default


class FirstMessage(BaseModel):
    type: str
    description: str
    example: str


class FirstMessageMode(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: str


class HipaaEnabled(BaseModel):
    type: str
    description: str
    example: bool


class Items77(BaseModel):
    type: str
    enum: List[str]


class ClientMessages(BaseModel):
    type: str
    enum: List[str]
    example: List[str]
    description: str
    items: Items77


class ServerMessages(BaseModel):
    type: str
    enum: List[str]
    example: List[str]
    description: str
    items: Items77


class SilenceTimeoutSeconds(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: int


class MaxDurationSeconds(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int
    example: int


class BackgroundSound(BaseModel):
    type: str
    description: str
    enum: List[str]
    example: str


class BackgroundDenoisingEnabled(BaseModel):
    type: str
    description: str
    example: bool


class ModelOutputInMessagesEnabled(BaseModel):
    type: str
    description: str
    example: bool


class Items79(BaseModel):
    oneOf: List[OneOfItem68]


class TransportConfigurations(BaseModel):
    type: str
    description: str
    items: Items79


class Name1(BaseModel):
    type: str
    description: str
    maxLength: int


class VoicemailDetection(BaseModel):
    description: str
    allOf: List[AllOfItem]


class VoicemailMessage(BaseModel):
    type: str
    description: str
    maxLength: int


class EndCallMessage(BaseModel):
    type: str
    description: str
    maxLength: int


class Items80(BaseModel):
    type: str
    maxLength: int
    minLength: int


class EndCallPhrases(BaseModel):
    description: str
    type: str
    items: Items80


class Metadata2(BaseModel):
    type: str
    description: str


class AnalysisPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class ArtifactPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class MessagePlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class StartSpeakingPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class StopSpeakingPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class MonitorPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items81(BaseModel):
    type: str


class CredentialIds(BaseModel):
    description: str
    type: str
    items: Items81


class Server12(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties94(BaseModel):
    transcriber: Transcriber
    model: Model25
    voice: Voice
    firstMessage: FirstMessage
    firstMessageMode: FirstMessageMode
    hipaaEnabled: HipaaEnabled
    clientMessages: ClientMessages
    serverMessages: ServerMessages
    silenceTimeoutSeconds: SilenceTimeoutSeconds
    maxDurationSeconds: MaxDurationSeconds
    backgroundSound: BackgroundSound
    backgroundDenoisingEnabled: BackgroundDenoisingEnabled
    modelOutputInMessagesEnabled: ModelOutputInMessagesEnabled
    transportConfigurations: TransportConfigurations
    name: Name1
    voicemailDetection: VoicemailDetection
    voicemailMessage: VoicemailMessage
    endCallMessage: EndCallMessage
    endCallPhrases: EndCallPhrases
    metadata: Metadata2
    analysisPlan: AnalysisPlan1
    artifactPlan: ArtifactPlan1
    messagePlan: MessagePlan1
    startSpeakingPlan: StartSpeakingPlan1
    stopSpeakingPlan: StopSpeakingPlan1
    monitorPlan: MonitorPlan1
    credentialIds: CredentialIds
    server: Server12


class CreateAssistantDTO(BaseModel):
    type: str
    properties: Properties94


class Transcriber1(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Model26(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Voice1(BaseModel):
    description: str
    oneOf: List[OneOfItem68]
    default: Default


class Items82(BaseModel):
    type: str
    enum: List[str]


class ClientMessages1(BaseModel):
    type: str
    enum: List[str]
    example: List[str]
    description: str
    items: Items82


class ServerMessages1(BaseModel):
    type: str
    enum: List[str]
    example: List[str]
    description: str
    items: Items82


class Items84(BaseModel):
    oneOf: List[OneOfItem68]


class TransportConfigurations1(BaseModel):
    type: str
    description: str
    items: Items84


class VariableValues(BaseModel):
    type: str
    description: str


class VoicemailDetection1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items85(BaseModel):
    type: str
    maxLength: int
    minLength: int


class EndCallPhrases1(BaseModel):
    description: str
    type: str
    items: Items85


class AnalysisPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class ArtifactPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class MessagePlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class StartSpeakingPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class StopSpeakingPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class MonitorPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items86(BaseModel):
    type: str


class CredentialIds1(BaseModel):
    description: str
    type: str
    items: Items86


class Server13(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties95(BaseModel):
    transcriber: Transcriber1
    model: Model26
    voice: Voice1
    firstMessage: FirstMessage
    firstMessageMode: FirstMessageMode
    hipaaEnabled: HipaaEnabled
    clientMessages: ClientMessages1
    serverMessages: ServerMessages1
    silenceTimeoutSeconds: SilenceTimeoutSeconds
    maxDurationSeconds: MaxDurationSeconds
    backgroundSound: BackgroundSound
    backgroundDenoisingEnabled: BackgroundDenoisingEnabled
    modelOutputInMessagesEnabled: ModelOutputInMessagesEnabled
    transportConfigurations: TransportConfigurations1
    variableValues: VariableValues
    name: Name1
    voicemailDetection: VoicemailDetection1
    voicemailMessage: VoicemailMessage
    endCallMessage: EndCallMessage
    endCallPhrases: EndCallPhrases1
    metadata: Metadata2
    analysisPlan: AnalysisPlan2
    artifactPlan: ArtifactPlan2
    messagePlan: MessagePlan2
    startSpeakingPlan: StartSpeakingPlan2
    stopSpeakingPlan: StopSpeakingPlan2
    monitorPlan: MonitorPlan2
    credentialIds: CredentialIds1
    server: Server13


class AssistantOverrides(BaseModel):
    type: str
    properties: Properties95


class AssistantId(BaseModel):
    type: str
    nullable: bool
    description: str


class Assistant(BaseModel):
    description: str
    allOf: List[AllOfItem]


class AssistantOverrides1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items87(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AssistantDestinations(BaseModel):
    description: str
    type: str
    items: Items87


class Properties96(BaseModel):
    assistantId: AssistantId
    assistant: Assistant
    assistantOverrides: AssistantOverrides1
    assistantDestinations: AssistantDestinations


class SquadMemberDTO(BaseModel):
    type: str
    properties: Properties96


class Name3(BaseModel):
    type: str
    description: str


class Members(BaseModel):
    description: str
    type: str
    items: Items87


class MembersOverrides(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties97(BaseModel):
    name: Name3
    members: Members
    membersOverrides: MembersOverrides


class CreateSquadDTO(BaseModel):
    type: str
    properties: Properties97
    required: List[str]


class FallbackDestination(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class TwilioPhoneNumber(BaseModel):
    type: str
    description: str
    deprecated: bool


class TwilioAccountSid(BaseModel):
    type: str
    description: str


class TwilioAuthToken(BaseModel):
    type: str
    description: str


class Name4(BaseModel):
    type: str
    description: str
    maxLength: int


class AssistantId1(BaseModel):
    type: str
    description: str


class SquadId(BaseModel):
    type: str
    description: str


class Server14(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties98(BaseModel):
    fallbackDestination: FallbackDestination
    twilioPhoneNumber: TwilioPhoneNumber
    twilioAccountSid: TwilioAccountSid
    twilioAuthToken: TwilioAuthToken
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server14


class ImportTwilioPhoneNumberDTO(BaseModel):
    type: str
    properties: Properties98
    required: List[str]


class Extension1(BaseModel):
    type: str
    description: str
    maxLength: int
    example: None


class Properties99(BaseModel):
    numberE164CheckEnabled: NumberE164CheckEnabled
    extension: Extension1
    number: Number
    sipUri: SipUri
    name: Name4


class CreateCustomerDTO(BaseModel):
    type: str
    properties: Properties99


class Assistant1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class AssistantOverrides2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Squad(BaseModel):
    description: str
    allOf: List[AllOfItem]


class PhoneNumberId(BaseModel):
    type: str
    description: str


class PhoneNumber(BaseModel):
    description: str
    allOf: List[AllOfItem]


class CustomerId(BaseModel):
    type: str
    description: str


class Customer(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties100(BaseModel):
    name: Name4
    assistantId: AssistantId1
    assistant: Assistant1
    assistantOverrides: AssistantOverrides2
    squadId: SquadId
    squad: Squad
    phoneNumberId: PhoneNumberId
    phoneNumber: PhoneNumber
    customerId: CustomerId
    customer: Customer


class CreateCallDTO(BaseModel):
    type: str
    properties: Properties100


class Summary(BaseModel):
    type: str
    description: str


class SummaryPromptTokens(BaseModel):
    type: str
    description: str


class SummaryCompletionTokens(BaseModel):
    type: str
    description: str


class StructuredData(BaseModel):
    type: str
    description: str


class StructuredDataPromptTokens(BaseModel):
    type: str
    description: str


class StructuredDataCompletionTokens(BaseModel):
    type: str
    description: str


class SuccessEvaluation(BaseModel):
    type: str
    description: str


class SuccessEvaluationPromptTokens(BaseModel):
    type: str
    description: str


class SuccessEvaluationCompletionTokens(BaseModel):
    type: str
    description: str


class Properties101(BaseModel):
    summary: Summary
    summaryPromptTokens: SummaryPromptTokens
    summaryCompletionTokens: SummaryCompletionTokens
    structuredData: StructuredData
    structuredDataPromptTokens: StructuredDataPromptTokens
    structuredDataCompletionTokens: StructuredDataCompletionTokens
    successEvaluation: SuccessEvaluation
    successEvaluationPromptTokens: SuccessEvaluationPromptTokens
    successEvaluationCompletionTokens: SuccessEvaluationCompletionTokens


class AnalysisCostBreakdown(BaseModel):
    type: str
    properties: Properties101


class Transport(BaseModel):
    type: str
    description: str


class Stt(BaseModel):
    type: str
    description: str


class Llm(BaseModel):
    type: str
    description: str


class Tts(BaseModel):
    type: str
    description: str


class Vapi(BaseModel):
    type: str
    description: str


class Total(BaseModel):
    type: str
    description: str


class LlmPromptTokens(BaseModel):
    type: str
    description: str


class LlmCompletionTokens(BaseModel):
    type: str
    description: str


class TtsCharacters(BaseModel):
    type: str
    description: str


class AnalysisCostBreakdown1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties102(BaseModel):
    transport: Transport
    stt: Stt
    llm: Llm
    tts: Tts
    vapi: Vapi
    total: Total
    llmPromptTokens: LlmPromptTokens
    llmCompletionTokens: LlmCompletionTokens
    ttsCharacters: TtsCharacters
    analysisCostBreakdown: AnalysisCostBreakdown1


class CostBreakdown(BaseModel):
    type: str
    properties: Properties102


class Properties103(BaseModel):
    summary: Summary
    structuredData: StructuredData
    successEvaluation: SuccessEvaluation


class Analysis(BaseModel):
    type: str
    properties: Properties103


class ListenUrl(BaseModel):
    type: str
    description: str


class ControlUrl(BaseModel):
    type: str
    description: str


class Properties104(BaseModel):
    listenUrl: ListenUrl
    controlUrl: ControlUrl


class Monitor(BaseModel):
    type: str
    properties: Properties104


class Items89(BaseModel):
    oneOf: List[OneOfItem68]


class Messages23(BaseModel):
    type: str
    description: str
    items: Items89


class Items90(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MessagesOpenAIFormatted(BaseModel):
    description: str
    type: str
    items: Items90


class RecordingUrl(BaseModel):
    type: str
    description: str


class StereoRecordingUrl(BaseModel):
    type: str
    description: str


class VideoRecordingUrl(BaseModel):
    type: str
    description: str


class VideoRecordingStartDelaySeconds(BaseModel):
    type: str
    description: str


class Transcript(BaseModel):
    type: str
    description: str


class Properties105(BaseModel):
    messages: Messages23
    messagesOpenAIFormatted: MessagesOpenAIFormatted
    recordingUrl: RecordingUrl
    stereoRecordingUrl: StereoRecordingUrl
    videoRecordingUrl: VideoRecordingUrl
    videoRecordingStartDelaySeconds: VideoRecordingStartDelaySeconds
    transcript: Transcript


class Artifact(BaseModel):
    type: str
    properties: Properties105


class AssistantVideoEnabled(BaseModel):
    type: str
    description: str


class Properties106(BaseModel):
    provider: Provider42
    assistantVideoEnabled: AssistantVideoEnabled


class Transport1(BaseModel):
    type: str
    properties: Properties106


class Items91(BaseModel):
    oneOf: List[OneOfItem68]


class Costs(BaseModel):
    type: str
    description: str
    items: Items91


class Items92(BaseModel):
    oneOf: List[OneOfItem68]


class Messages24(BaseModel):
    type: str
    items: Items92


class PhoneCallProvider(BaseModel):
    type: str
    description: str
    enum: List[str]


class PhoneCallTransport(BaseModel):
    type: str
    description: str
    enum: List[str]


class Status(BaseModel):
    type: str
    description: str
    enum: List[str]


class EndedReason(BaseModel):
    type: str
    description: str
    enum: List[str]


class Destination(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Id(BaseModel):
    type: str
    description: str


class OrgId(BaseModel):
    type: str
    description: str


class CreatedAt(BaseModel):
    format: str
    type: str
    description: str


class UpdatedAt(BaseModel):
    format: str
    type: str
    description: str


class StartedAt(BaseModel):
    format: str
    type: str
    description: str


class EndedAt(BaseModel):
    format: str
    type: str
    description: str


class Cost(BaseModel):
    type: str
    description: str


class CostBreakdown1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class ArtifactPlan3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Analysis1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Monitor1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Artifact1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Transport2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class PhoneCallProviderId(BaseModel):
    type: str
    description: str


class Assistant2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class AssistantOverrides3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Squad1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class PhoneNumber1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties107(BaseModel):
    type: Type19
    costs: Costs
    messages: Messages24
    phoneCallProvider: PhoneCallProvider
    phoneCallTransport: PhoneCallTransport
    status: Status
    endedReason: EndedReason
    destination: Destination
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    startedAt: StartedAt
    endedAt: EndedAt
    cost: Cost
    costBreakdown: CostBreakdown1
    artifactPlan: ArtifactPlan3
    analysis: Analysis1
    monitor: Monitor1
    artifact: Artifact1
    transport: Transport2
    phoneCallProviderId: PhoneCallProviderId
    assistantId: AssistantId1
    assistant: Assistant2
    assistantOverrides: AssistantOverrides3
    squadId: SquadId
    squad: Squad1
    phoneNumberId: PhoneNumberId
    phoneNumber: PhoneNumber1
    customerId: CustomerId
    customer: Customer1
    name: Name4


class Call(BaseModel):
    type: str
    properties: Properties107
    required: List[str]


class ItemsPerPage(BaseModel):
    type: str


class TotalItems(BaseModel):
    type: str


class CurrentPage(BaseModel):
    type: str


class Properties108(BaseModel):
    itemsPerPage: ItemsPerPage
    totalItems: TotalItems
    currentPage: CurrentPage


class PaginationMeta(BaseModel):
    type: str
    properties: Properties108
    required: List[str]


class Items93(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Results(BaseModel):
    type: str
    items: Items93


class Metadata4(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties109(BaseModel):
    results: Results
    metadata: Metadata4


class CallPaginatedResponse(BaseModel):
    type: str
    properties: Properties109
    required: List[str]


class Assistant3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class AssistantOverrides4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Squad2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class PhoneNumber2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties110(BaseModel):
    name: Name4
    assistantId: AssistantId1
    assistant: Assistant3
    assistantOverrides: AssistantOverrides4
    squadId: SquadId
    squad: Squad2
    phoneNumberId: PhoneNumberId
    phoneNumber: PhoneNumber2
    customerId: CustomerId
    customer: Customer2


class CreateOutboundCallDTO(BaseModel):
    type: str
    properties: Properties110


class Assistant4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class AssistantOverrides5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Squad3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties111(BaseModel):
    assistantId: AssistantId1
    assistant: Assistant4
    assistantOverrides: AssistantOverrides5
    squadId: SquadId
    squad: Squad3


class CreateWebCallDTO(BaseModel):
    type: str
    properties: Properties111


class Properties112(BaseModel):
    name: Name4


class UpdateCallDTO(BaseModel):
    type: str
    properties: Properties112


class Transcriber2(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Model27(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Voice2(BaseModel):
    description: str
    oneOf: List[OneOfItem68]
    default: Default


class Items94(BaseModel):
    type: str
    enum: List[str]


class ClientMessages2(BaseModel):
    type: str
    enum: List[str]
    example: List[str]
    description: str
    items: Items94


class ServerMessages2(BaseModel):
    type: str
    enum: List[str]
    example: List[str]
    description: str
    items: Items94


class Items96(BaseModel):
    oneOf: List[OneOfItem68]


class TransportConfigurations2(BaseModel):
    type: str
    description: str
    items: Items96


class VoicemailDetection2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items97(BaseModel):
    type: str
    maxLength: int
    minLength: int


class EndCallPhrases2(BaseModel):
    description: str
    type: str
    items: Items97


class Metadata5(BaseModel):
    type: str
    description: str


class AnalysisPlan3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class ArtifactPlan4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class MessagePlan3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class StartSpeakingPlan3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class StopSpeakingPlan3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class MonitorPlan3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items98(BaseModel):
    type: str


class CredentialIds2(BaseModel):
    description: str
    type: str
    items: Items98


class Server15(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties113(BaseModel):
    transcriber: Transcriber2
    model: Model27
    voice: Voice2
    firstMessage: FirstMessage
    firstMessageMode: FirstMessageMode
    hipaaEnabled: HipaaEnabled
    clientMessages: ClientMessages2
    serverMessages: ServerMessages2
    silenceTimeoutSeconds: SilenceTimeoutSeconds
    maxDurationSeconds: MaxDurationSeconds
    backgroundSound: BackgroundSound
    backgroundDenoisingEnabled: BackgroundDenoisingEnabled
    modelOutputInMessagesEnabled: ModelOutputInMessagesEnabled
    transportConfigurations: TransportConfigurations2
    name: Name4
    voicemailDetection: VoicemailDetection2
    voicemailMessage: VoicemailMessage
    endCallMessage: EndCallMessage
    endCallPhrases: EndCallPhrases2
    metadata: Metadata5
    analysisPlan: AnalysisPlan3
    artifactPlan: ArtifactPlan4
    messagePlan: MessagePlan3
    startSpeakingPlan: StartSpeakingPlan3
    stopSpeakingPlan: StopSpeakingPlan3
    monitorPlan: MonitorPlan3
    credentialIds: CredentialIds2
    server: Server15
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt


class Assistant5(BaseModel):
    type: str
    properties: Properties113
    required: List[str]


class Transcriber3(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Model28(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Voice3(BaseModel):
    description: str
    oneOf: List[OneOfItem68]
    default: Default


class Items99(BaseModel):
    type: str
    enum: List[str]


class ClientMessages3(BaseModel):
    type: str
    enum: List[str]
    example: List[str]
    description: str
    items: Items99


class ServerMessages3(BaseModel):
    type: str
    enum: List[str]
    example: List[str]
    description: str
    items: Items99


class Items101(BaseModel):
    oneOf: List[OneOfItem68]


class TransportConfigurations3(BaseModel):
    type: str
    description: str
    items: Items101


class VoicemailDetection3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items102(BaseModel):
    type: str
    maxLength: int
    minLength: int


class EndCallPhrases3(BaseModel):
    description: str
    type: str
    items: Items102


class AnalysisPlan4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class ArtifactPlan5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class MessagePlan4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class StartSpeakingPlan4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class StopSpeakingPlan4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class MonitorPlan4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items103(BaseModel):
    type: str


class CredentialIds3(BaseModel):
    description: str
    type: str
    items: Items103


class Server16(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties114(BaseModel):
    transcriber: Transcriber3
    model: Model28
    voice: Voice3
    firstMessage: FirstMessage
    firstMessageMode: FirstMessageMode
    hipaaEnabled: HipaaEnabled
    clientMessages: ClientMessages3
    serverMessages: ServerMessages3
    silenceTimeoutSeconds: SilenceTimeoutSeconds
    maxDurationSeconds: MaxDurationSeconds
    backgroundSound: BackgroundSound
    backgroundDenoisingEnabled: BackgroundDenoisingEnabled
    modelOutputInMessagesEnabled: ModelOutputInMessagesEnabled
    transportConfigurations: TransportConfigurations3
    name: Name4
    voicemailDetection: VoicemailDetection3
    voicemailMessage: VoicemailMessage
    endCallMessage: EndCallMessage
    endCallPhrases: EndCallPhrases3
    metadata: Metadata5
    analysisPlan: AnalysisPlan4
    artifactPlan: ArtifactPlan5
    messagePlan: MessagePlan4
    startSpeakingPlan: StartSpeakingPlan4
    stopSpeakingPlan: StopSpeakingPlan4
    monitorPlan: MonitorPlan4
    credentialIds: CredentialIds3
    server: Server16


class UpdateAssistantDTO(BaseModel):
    type: str
    properties: Properties114


class FallbackDestination1(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Server17(BaseModel):
    description: str
    allOf: List[AllOfItem]


class CredentialId(BaseModel):
    type: str
    description: str


class Properties115(BaseModel):
    fallbackDestination: FallbackDestination1
    provider: Provider42
    numberE164CheckEnabled: NumberE164CheckEnabled
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server17
    number: Number
    credentialId: CredentialId


class ByoPhoneNumber(BaseModel):
    type: str
    properties: Properties115
    required: List[str]


class FallbackDestination2(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Server18(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Number3(BaseModel):
    type: str
    description: str


class Properties116(BaseModel):
    fallbackDestination: FallbackDestination2
    provider: Provider42
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server18
    number: Number3
    twilioAccountSid: TwilioAccountSid
    twilioAuthToken: TwilioAuthToken


class TwilioPhoneNumber1(BaseModel):
    type: str
    properties: Properties116
    required: List[str]


class FallbackDestination3(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Server19(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties117(BaseModel):
    fallbackDestination: FallbackDestination3
    provider: Provider42
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server19
    number: Number3
    credentialId: CredentialId


class VonagePhoneNumber(BaseModel):
    type: str
    properties: Properties117
    required: List[str]


class Realm(BaseModel):
    type: str
    description: str


class Username(BaseModel):
    type: str
    description: str
    minLength: int
    maxLength: int


class Password(BaseModel):
    type: str
    description: str
    minLength: int
    maxLength: int


class Properties118(BaseModel):
    realm: Realm
    username: Username
    password: Password


class SipAuthentication(BaseModel):
    type: str
    properties: Properties118
    required: List[str]


class FallbackDestination4(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Server20(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Authentication(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties119(BaseModel):
    fallbackDestination: FallbackDestination4
    provider: Provider42
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server20
    sipUri: SipUri
    authentication: Authentication


class VapiPhoneNumber(BaseModel):
    type: str
    properties: Properties119
    required: List[str]


class FallbackDestination5(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Number5(BaseModel):
    type: str
    description: str
    minLength: int
    maxLength: int


class Server21(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties120(BaseModel):
    fallbackDestination: FallbackDestination5
    provider: Provider42
    numberE164CheckEnabled: NumberE164CheckEnabled
    number: Number5
    credentialId: CredentialId
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server21


class CreateByoPhoneNumberDTO(BaseModel):
    type: str
    properties: Properties120
    required: List[str]


class FallbackDestination6(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Number6(BaseModel):
    type: str
    description: str


class Server22(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties121(BaseModel):
    fallbackDestination: FallbackDestination6
    provider: Provider42
    number: Number6
    twilioAccountSid: TwilioAccountSid
    twilioAuthToken: TwilioAuthToken
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server22


class CreateTwilioPhoneNumberDTO(BaseModel):
    type: str
    properties: Properties121
    required: List[str]


class FallbackDestination7(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Server23(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties122(BaseModel):
    fallbackDestination: FallbackDestination7
    provider: Provider42
    number: Number6
    credentialId: CredentialId
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server23


class CreateVonagePhoneNumberDTO(BaseModel):
    type: str
    properties: Properties122
    required: List[str]


class FallbackDestination8(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class Authentication1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server24(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties123(BaseModel):
    fallbackDestination: FallbackDestination8
    provider: Provider42
    sipUri: SipUri
    authentication: Authentication1
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server24


class CreateVapiPhoneNumberDTO(BaseModel):
    type: str
    properties: Properties123
    required: List[str]


class FallbackDestination9(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class AreaCode(BaseModel):
    type: str
    description: str
    minLength: int
    maxLength: int


class Server25(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties124(BaseModel):
    fallbackDestination: FallbackDestination9
    areaCode: AreaCode
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server25


class BuyPhoneNumberDTO(BaseModel):
    type: str
    properties: Properties124
    required: List[str]


class FallbackDestination10(BaseModel):
    description: str
    oneOf: List[OneOfItem68]


class VonagePhoneNumber1(BaseModel):
    type: str
    description: str
    deprecated: bool


class Server26(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties125(BaseModel):
    fallbackDestination: FallbackDestination10
    vonagePhoneNumber: VonagePhoneNumber1
    credentialId: CredentialId
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server26


class ImportVonagePhoneNumberDTO(BaseModel):
    type: str
    properties: Properties125
    required: List[str]


class OneOfItem100(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items104(BaseModel):
    oneOf: List[OneOfItem100]


class Results1(BaseModel):
    type: str
    description: str
    items: Items104


class Metadata7(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties126(BaseModel):
    results: Results1
    metadata: Metadata7


class PhoneNumberPaginatedResponse(BaseModel):
    type: str
    properties: Properties126
    required: List[str]


class OneOfItem101(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    title: str


class FallbackDestination11(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Server27(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties127(BaseModel):
    fallbackDestination: FallbackDestination11
    name: Name4
    assistantId: AssistantId1
    squadId: SquadId
    server: Server27


class UpdatePhoneNumberDTO(BaseModel):
    type: str
    properties: Properties127


class Credits(BaseModel):
    type: str
    description: str


class Threshold(BaseModel):
    type: str
    description: str


class Properties128(BaseModel):
    credits: Credits
    threshold: Threshold


class AutoReloadPlan(BaseModel):
    type: str
    properties: Properties128
    required: List[str]


class ConcurrencyLimit(BaseModel):
    type: str
    description: str
    minimum: int


class ConcurrencyLimitIncluded(BaseModel):
    type: str
    description: str


class ConcurrencyLimitPurchased(BaseModel):
    type: str
    description: str


class MonthlyChargeScheduleId(BaseModel):
    type: str
    description: str


class MonthlyCreditCheckScheduleId(BaseModel):
    type: str
    description: str


class StripeCustomerId(BaseModel):
    type: str
    description: str


class StripePaymentMethodId(BaseModel):
    type: str
    description: str


class SlackSupportEnabled(BaseModel):
    type: str
    description: str


class SlackChannelId(BaseModel):
    type: str
    description: str


class HipaaEnabled4(BaseModel):
    type: str
    description: str


class HipaaCommonPaperAgreementId(BaseModel):
    type: str
    description: str


class StripePaymentMethodFingerprint(BaseModel):
    type: str
    description: str


class StripeCustomerEmail(BaseModel):
    type: str
    description: str


class ReferredByEmail(BaseModel):
    type: str
    description: str


class AutoReloadPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class MinutesIncluded(BaseModel):
    type: str
    description: str


class MinutesUsed(BaseModel):
    type: str
    description: str


class MinutesOverageCost(BaseModel):
    type: str
    description: str


class Items105(BaseModel):
    type: str


class ProvidersIncluded(BaseModel):
    description: str
    type: str
    items: Items105


class OutboundCallsDailyLimit(BaseModel):
    type: str
    description: str
    minimum: int


class OutboundCallsCounter(BaseModel):
    type: str
    description: str
    minimum: int


class OutboundCallsCounterNextResetAt(BaseModel):
    format: str
    type: str
    description: str


class CouponIds(BaseModel):
    description: str
    type: str
    items: Items105


class CouponUsageLeft(BaseModel):
    type: str
    description: str


class Properties129(BaseModel):
    id: Id
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    type: Type19
    status: Status
    credits: Credits
    concurrencyLimit: ConcurrencyLimit
    concurrencyLimitIncluded: ConcurrencyLimitIncluded
    concurrencyLimitPurchased: ConcurrencyLimitPurchased
    monthlyChargeScheduleId: MonthlyChargeScheduleId
    monthlyCreditCheckScheduleId: MonthlyCreditCheckScheduleId
    stripeCustomerId: StripeCustomerId
    stripePaymentMethodId: StripePaymentMethodId
    slackSupportEnabled: SlackSupportEnabled
    slackChannelId: SlackChannelId
    hipaaEnabled: HipaaEnabled4
    hipaaCommonPaperAgreementId: HipaaCommonPaperAgreementId
    stripePaymentMethodFingerprint: StripePaymentMethodFingerprint
    stripeCustomerEmail: StripeCustomerEmail
    referredByEmail: ReferredByEmail
    autoReloadPlan: AutoReloadPlan1
    minutesIncluded: MinutesIncluded
    minutesUsed: MinutesUsed
    minutesOverageCost: MinutesOverageCost
    providersIncluded: ProvidersIncluded
    outboundCallsDailyLimit: OutboundCallsDailyLimit
    outboundCallsCounter: OutboundCallsCounter
    outboundCallsCounterNextResetAt: OutboundCallsCounterNextResetAt
    couponIds: CouponIds
    couponUsageLeft: CouponUsageLeft


class Subscription(BaseModel):
    type: str
    properties: Properties129
    required: List[str]


class Properties130(BaseModel):
    stripeCustomerEmail: StripeCustomerEmail


class UpdateSubscriptionDTO(BaseModel):
    type: str
    properties: Properties130


class Costs1(BaseModel):
    description: str
    type: str
    items: Items105


class IsAutoReload(BaseModel):
    type: str
    description: str


class SubscriptionId(BaseModel):
    type: str
    description: str


class CallId(BaseModel):
    type: str
    description: str


class StripePaymentIntentId(BaseModel):
    type: str
    description: str


class StripeInvoiceId(BaseModel):
    type: str
    description: str


class Properties131(BaseModel):
    id: Id
    orgId: OrgId
    cost: Cost
    costs: Costs1
    status: Status
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    isAutoReload: IsAutoReload
    subscriptionId: SubscriptionId
    callId: CallId
    phoneNumberId: PhoneNumberId
    stripePaymentIntentId: StripePaymentIntentId
    stripeInvoiceId: StripeInvoiceId


class Payment(BaseModel):
    type: str
    properties: Properties131
    required: List[str]


class Items108(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Results2(BaseModel):
    type: str
    items: Items108


class Metadata8(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties132(BaseModel):
    results: Results2
    metadata: Metadata8


class PaymentsPaginatedResponse(BaseModel):
    type: str
    properties: Properties132
    required: List[str]


class MonthlyCharge(BaseModel):
    type: str
    description: str


class Items109(BaseModel):
    type: str


class Costs2(BaseModel):
    description: str
    type: str
    items: Items109


class Properties133(BaseModel):
    monthlyCharge: MonthlyCharge
    costs: Costs2


class SubscriptionMonthlyCharge(BaseModel):
    type: str
    properties: Properties133
    required: List[str]


class Properties134(BaseModel):
    credits: Credits


class CreditsBuyDTO(BaseModel):
    type: str
    properties: Properties134
    required: List[str]


class AutoReloadPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties135(BaseModel):
    autoReloadPlan: AutoReloadPlan2


class AutoReloadPlanDTO(BaseModel):
    type: str
    properties: Properties135


class PaymentId(BaseModel):
    type: str
    description: str


class Properties136(BaseModel):
    paymentId: PaymentId


class PaymentRetryDTO(BaseModel):
    type: str
    properties: Properties136
    required: List[str]


class Quantity(BaseModel):
    type: str
    description: str


class Properties137(BaseModel):
    quantity: Quantity


class SubscriptionConcurrencyLineBuyDTO(BaseModel):
    type: str
    properties: Properties137
    required: List[str]


class Properties138(BaseModel):
    quantity: Quantity


class SubscriptionConcurrencyLineRemoveDTO(BaseModel):
    type: str
    properties: Properties138
    required: List[str]


class RecipientName(BaseModel):
    type: str
    description: str


class RecipientOrganization(BaseModel):
    type: str
    description: str


class Properties139(BaseModel):
    recipientName: RecipientName
    recipientOrganization: RecipientOrganization


class HipaaBuyDTO(BaseModel):
    type: str
    properties: Properties139
    required: List[str]


class CouponCode(BaseModel):
    type: str
    description: str


class Properties140(BaseModel):
    orgId: OrgId
    couponCode: CouponCode


class SubscriptionCouponAddDTO(BaseModel):
    type: str
    properties: Properties140
    required: List[str]


class Name23(BaseModel):
    type: str
    description: str


class Items110(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Members1(BaseModel):
    description: str
    type: str
    items: Items110


class MembersOverrides1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties141(BaseModel):
    name: Name23
    members: Members1
    membersOverrides: MembersOverrides1
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt


class Squad4(BaseModel):
    type: str
    properties: Properties141
    required: List[str]


class Members2(BaseModel):
    description: str
    type: str
    items: Items110


class MembersOverrides2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties142(BaseModel):
    name: Name23
    members: Members2
    membersOverrides: MembersOverrides2


class UpdateSquadDTO(BaseModel):
    type: str
    properties: Properties142
    required: List[str]


class RemoveStopWords(BaseModel):
    type: str
    description: str


class ScoreThreshold(BaseModel):
    type: str
    description: str


class SearchType(BaseModel):
    type: str
    description: str
    enum: List[str]


class Properties143(BaseModel):
    removeStopWords: RemoveStopWords
    scoreThreshold: ScoreThreshold
    searchType: SearchType


class TrieveKnowledgeBaseVectorStoreSearchPlan(BaseModel):
    type: str
    properties: Properties143
    required: List[str]


class Items112(BaseModel):
    type: str


class FileIds(BaseModel):
    description: str
    type: str
    items: Items112


class TargetSplitsPerChunk(BaseModel):
    type: str
    description: str


class SplitDelimiters(BaseModel):
    description: str
    type: str
    items: Items112


class RebalanceChunks(BaseModel):
    type: str
    description: str


class Properties144(BaseModel):
    fileIds: FileIds
    targetSplitsPerChunk: TargetSplitsPerChunk
    splitDelimiters: SplitDelimiters
    rebalanceChunks: RebalanceChunks


class TrieveKnowledgeBaseVectorStoreCreatePlan(BaseModel):
    type: str
    properties: Properties144
    required: List[str]


class VectorStoreSearchPlan(BaseModel):
    description: str
    allOf: List[AllOfItem]


class VectorStoreCreatePlan(BaseModel):
    description: str
    allOf: List[AllOfItem]


class VectorStoreProviderId(BaseModel):
    type: str
    description: str


class Properties145(BaseModel):
    provider: Provider42
    name: Name23
    vectorStoreSearchPlan: VectorStoreSearchPlan
    vectorStoreCreatePlan: VectorStoreCreatePlan
    vectorStoreProviderId: VectorStoreProviderId
    id: Id
    orgId: OrgId


class TrieveKnowledgeBase(BaseModel):
    type: str
    properties: Properties145
    required: List[str]


class Server28(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties146(BaseModel):
    provider: Provider42
    server: Server28
    id: Id
    orgId: OrgId


class CustomKnowledgeBase(BaseModel):
    type: str
    properties: Properties146
    required: List[str]


class VectorStoreSearchPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class VectorStoreCreatePlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties147(BaseModel):
    provider: Provider42
    name: Name23
    vectorStoreSearchPlan: VectorStoreSearchPlan1
    vectorStoreCreatePlan: VectorStoreCreatePlan1
    vectorStoreProviderId: VectorStoreProviderId


class CreateTrieveKnowledgeBaseDTO(BaseModel):
    type: str
    properties: Properties147
    required: List[str]


class Items114(BaseModel):
    oneOf: List[OneOfItem101]


class Messages25(BaseModel):
    type: str
    description: str
    items: Items114


class InputSchema(BaseModel):
    description: str
    allOf: List[AllOfItem]


class OutputSchema(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Instruction(BaseModel):
    type: str
    description: str
    minLength: int


class Properties148(BaseModel):
    messages: Messages25
    inputSchema: InputSchema
    outputSchema: OutputSchema
    type: Type19
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name23
    instruction: Instruction


class ConversationBlock(BaseModel):
    type: str
    properties: Properties148
    required: List[str]


class Items115(BaseModel):
    oneOf: List[OneOfItem101]


class Messages26(BaseModel):
    type: str
    description: str
    items: Items115


class InputSchema1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class OutputSchema1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Tool(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class ToolId(BaseModel):
    type: str
    description: str


class Properties149(BaseModel):
    messages: Messages26
    inputSchema: InputSchema1
    outputSchema: OutputSchema1
    type: Type19
    tool: Tool
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name23
    toolId: ToolId


class ToolCallBlock(BaseModel):
    type: str
    properties: Properties149
    required: List[str]


class Items116(BaseModel):
    oneOf: List[OneOfItem101]


class Messages27(BaseModel):
    type: str
    description: str
    items: Items116


class InputSchema2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class OutputSchema2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items117(BaseModel):
    oneOf: List[OneOfItem101]


class Steps1(BaseModel):
    type: str
    description: str
    items: Items117


class Properties150(BaseModel):
    messages: Messages27
    inputSchema: InputSchema2
    outputSchema: OutputSchema2
    type: Type19
    steps: Steps1
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name23


class WorkflowBlock(BaseModel):
    type: str
    properties: Properties150
    required: List[str]


class LeftSide(BaseModel):
    type: str
    description: str
    maxLength: int


class RightSide(BaseModel):
    type: str
    description: str
    maxLength: int


class Properties151(BaseModel):
    type: Type19
    operator: Operator
    leftSide: LeftSide
    rightSide: RightSide


class RuleBasedCondition(BaseModel):
    type: str
    properties: Properties151
    required: List[str]


class Properties152(BaseModel):
    type: Type19
    instruction: Instruction


class ModelBasedCondition(BaseModel):
    type: str
    properties: Properties152
    required: List[str]


class Items118(BaseModel):
    oneOf: List[OneOfItem101]


class Contents5(BaseModel):
    type: str
    description: str
    items: Items118


class Items119(BaseModel):
    oneOf: List[OneOfItem101]


class Conditions4(BaseModel):
    type: str
    description: str
    items: Items119


class Content6(BaseModel):
    type: str
    description: str
    maxLength: int


class Properties153(BaseModel):
    contents: Contents5
    conditions: Conditions4
    type: Type19
    content: Content6


class BlockStartMessage(BaseModel):
    type: str
    properties: Properties153
    required: List[str]


class Items120(BaseModel):
    oneOf: List[OneOfItem101]


class Contents6(BaseModel):
    type: str
    description: str
    items: Items120


class Items121(BaseModel):
    oneOf: List[OneOfItem101]


class Conditions5(BaseModel):
    type: str
    description: str
    items: Items121


class Properties154(BaseModel):
    contents: Contents6
    conditions: Conditions5
    type: Type19
    content: Content6


class BlockCompleteMessage(BaseModel):
    type: str
    properties: Properties154
    required: List[str]


class Items122(BaseModel):
    oneOf: List[OneOfItem101]


class Messages28(BaseModel):
    type: str
    description: str
    items: Items122


class InputSchema3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class OutputSchema3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties155(BaseModel):
    messages: Messages28
    inputSchema: InputSchema3
    outputSchema: OutputSchema3
    type: Type19
    instruction: Instruction
    name: Name23


class CreateConversationBlockDTO(BaseModel):
    type: str
    properties: Properties155
    required: List[str]


class Items123(BaseModel):
    oneOf: List[OneOfItem101]


class Messages29(BaseModel):
    type: str
    description: str
    items: Items123


class InputSchema4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class OutputSchema4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Tool1(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Properties156(BaseModel):
    messages: Messages29
    inputSchema: InputSchema4
    outputSchema: OutputSchema4
    type: Type19
    tool: Tool1
    toolId: ToolId
    name: Name23


class CreateToolCallBlockDTO(BaseModel):
    type: str
    properties: Properties156
    required: List[str]


class Items124(BaseModel):
    oneOf: List[OneOfItem101]


class Messages30(BaseModel):
    type: str
    description: str
    items: Items124


class InputSchema5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class OutputSchema5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items125(BaseModel):
    oneOf: List[OneOfItem101]


class Steps2(BaseModel):
    type: str
    description: str
    items: Items125


class Properties157(BaseModel):
    messages: Messages30
    inputSchema: InputSchema5
    outputSchema: OutputSchema5
    type: Type19
    steps: Steps2
    name: Name23


class CreateWorkflowBlockDTO(BaseModel):
    type: str
    properties: Properties157
    required: List[str]


class Items126(BaseModel):
    oneOf: List[OneOfItem101]


class Messages31(BaseModel):
    type: str
    description: str
    items: Items126


class InputSchema6(BaseModel):
    description: str
    allOf: List[AllOfItem]


class OutputSchema6(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Tool2(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Items127(BaseModel):
    oneOf: List[OneOfItem101]


class Steps3(BaseModel):
    type: str
    description: str
    items: Items127


class Properties158(BaseModel):
    messages: Messages31
    inputSchema: InputSchema6
    outputSchema: OutputSchema6
    tool: Tool2
    steps: Steps3
    name: Name23
    instruction: Instruction
    toolId: ToolId


class UpdateBlockDTO(BaseModel):
    type: str
    properties: Properties158


class Items128(BaseModel):
    oneOf: List[OneOfItem101]


class Messages32(BaseModel):
    type: str
    description: str
    items: Items128


class Type37(BaseModel):
    type: str
    enum: List[str]
    description: str


class Function7(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server29(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties159(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages32
    type: Type37
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    function: Function7
    server: Server29


class DtmfTool(BaseModel):
    type: str
    properties: Properties159
    required: List[str]


class Items129(BaseModel):
    oneOf: List[OneOfItem101]


class Messages33(BaseModel):
    type: str
    description: str
    items: Items129


class Function8(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server30(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties160(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages33
    type: Type37
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    function: Function8
    server: Server30


class EndCallTool(BaseModel):
    type: str
    properties: Properties160
    required: List[str]


class Items130(BaseModel):
    oneOf: List[OneOfItem101]


class Messages34(BaseModel):
    type: str
    description: str
    items: Items130


class Function9(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server31(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties161(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages34
    type: Type37
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    function: Function9
    server: Server31


class FunctionTool(BaseModel):
    type: str
    properties: Properties161
    required: List[str]


class Items131(BaseModel):
    oneOf: List[OneOfItem101]


class Messages35(BaseModel):
    type: str
    description: str
    items: Items131


class Function10(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server32(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties162(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages35
    type: Type37
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    function: Function10
    server: Server32
    metadata: Metadata8


class GhlTool(BaseModel):
    type: str
    properties: Properties162
    required: List[str]


class Items132(BaseModel):
    oneOf: List[OneOfItem101]


class Messages36(BaseModel):
    type: str
    description: str
    items: Items132


class Function11(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server33(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties163(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages36
    type: Type37
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    function: Function11
    server: Server33
    metadata: Metadata8


class MakeTool(BaseModel):
    type: str
    properties: Properties163
    required: List[str]


class Items133(BaseModel):
    oneOf: List[OneOfItem101]


class Messages37(BaseModel):
    type: str
    description: str
    items: Items133


class Type42(BaseModel):
    type: str
    enum: List[str]


class Items134(BaseModel):
    oneOf: List[OneOfItem101]


class Destinations1(BaseModel):
    type: str
    description: str
    items: Items134


class Function12(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server34(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties164(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages37
    type: Type42
    destinations: Destinations1
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    function: Function12
    server: Server34


class TransferCallTool(BaseModel):
    type: str
    properties: Properties164
    required: List[str]


class Items135(BaseModel):
    oneOf: List[OneOfItem101]


class Messages38(BaseModel):
    type: str
    description: str
    items: Items135


class Type43(BaseModel):
    type: str
    enum: List[str]
    description: str


class Function13(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server35(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties165(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages38
    type: Type43
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    function: Function13
    server: Server35


class OutputTool(BaseModel):
    type: str
    properties: Properties165
    required: List[str]


class Items136(BaseModel):
    oneOf: List[OneOfItem101]


class Messages39(BaseModel):
    type: str
    description: str
    items: Items136


class SubType(BaseModel):
    type: str
    enum: List[str]
    description: str


class Function14(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server36(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Name34(BaseModel):
    type: str
    description: str
    default: str
    enum: List[str]


class Properties166(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages39
    type: Type43
    subType: SubType
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    function: Function14
    server: Server36
    name: Name34


class BashTool(BaseModel):
    type: str
    properties: Properties166
    required: List[str]


class Items137(BaseModel):
    oneOf: List[OneOfItem101]


class Messages40(BaseModel):
    type: str
    description: str
    items: Items137


class Function15(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server37(BaseModel):
    description: str
    allOf: List[AllOfItem]


class DisplayWidthPx(BaseModel):
    type: str
    description: str


class DisplayHeightPx(BaseModel):
    type: str
    description: str


class DisplayNumber(BaseModel):
    type: str
    description: str


class Properties167(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages40
    type: Type43
    subType: SubType
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    function: Function15
    server: Server37
    name: Name34
    displayWidthPx: DisplayWidthPx
    displayHeightPx: DisplayHeightPx
    displayNumber: DisplayNumber


class ComputerTool(BaseModel):
    type: str
    properties: Properties167
    required: List[str]


class Items138(BaseModel):
    oneOf: List[OneOfItem101]


class Messages41(BaseModel):
    type: str
    description: str
    items: Items138


class Function16(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server38(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties168(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages41
    type: Type43
    subType: SubType
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    function: Function16
    server: Server38
    name: Name34


class TextEditorTool(BaseModel):
    type: str
    properties: Properties168
    required: List[str]


class Items139(BaseModel):
    oneOf: List[OneOfItem101]


class Messages42(BaseModel):
    type: str
    description: str
    items: Items139


class Function17(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server39(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties169(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages42
    type: Type43
    function: Function17
    server: Server39


class CreateOutputToolDTO(BaseModel):
    type: str
    properties: Properties169
    required: List[str]


class Items140(BaseModel):
    oneOf: List[OneOfItem101]


class Messages43(BaseModel):
    type: str
    description: str
    items: Items140


class Function18(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server40(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties170(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages43
    type: Type43
    subType: SubType
    name: Name34
    function: Function18
    server: Server40


class CreateBashToolDTO(BaseModel):
    type: str
    properties: Properties170
    required: List[str]


class Items141(BaseModel):
    oneOf: List[OneOfItem101]


class Messages44(BaseModel):
    type: str
    description: str
    items: Items141


class Function19(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server41(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties171(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages44
    type: Type43
    subType: SubType
    name: Name34
    displayWidthPx: DisplayWidthPx
    displayHeightPx: DisplayHeightPx
    displayNumber: DisplayNumber
    function: Function19
    server: Server41


class CreateComputerToolDTO(BaseModel):
    type: str
    properties: Properties171
    required: List[str]


class Items142(BaseModel):
    oneOf: List[OneOfItem101]


class Messages45(BaseModel):
    type: str
    description: str
    items: Items142


class Function20(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server42(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties172(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages45
    type: Type43
    subType: SubType
    name: Name34
    function: Function20
    server: Server42


class CreateTextEditorToolDTO(BaseModel):
    type: str
    properties: Properties172
    required: List[str]


class Items143(BaseModel):
    oneOf: List[OneOfItem101]


class Messages46(BaseModel):
    type: str
    description: str
    items: Items143


class Function21(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server43(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties173(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages46
    function: Function21
    server: Server43


class UpdateToolDTO(BaseModel):
    type: str
    properties: Properties173


class File(BaseModel):
    type: str
    description: str
    format: str


class Properties174(BaseModel):
    file: File


class CreateFileDTO(BaseModel):
    type: str
    properties: Properties174
    required: List[str]


class Object(BaseModel):
    type: str
    enum: List[str]


class Status3(BaseModel):
    enum: List[str]
    type: str


class Name40(BaseModel):
    type: str
    description: str
    maxLength: int


class OriginalName(BaseModel):
    type: str


class Bytes(BaseModel):
    type: str


class Purpose(BaseModel):
    type: str


class Mimetype(BaseModel):
    type: str


class Key1(BaseModel):
    type: str


class Path(BaseModel):
    type: str


class Bucket(BaseModel):
    type: str


class Url2(BaseModel):
    type: str


class Metadata11(BaseModel):
    type: str


class Properties175(BaseModel):
    object: Object
    status: Status3
    name: Name40
    originalName: OriginalName
    bytes: Bytes
    purpose: Purpose
    mimetype: Mimetype
    key: Key1
    path: Path
    bucket: Bucket
    url: Url2
    metadata: Metadata11
    id: Id
    orgId: OrgId
    createdAt: CreatedAt
    updatedAt: UpdatedAt


class File1(BaseModel):
    type: str
    properties: Properties175
    required: List[str]


class Name41(BaseModel):
    type: str
    description: str
    minLength: int
    maxLength: int


class Properties176(BaseModel):
    name: Name41


class UpdateFileDTO(BaseModel):
    type: str
    properties: Properties176


class OrgId25(BaseModel):
    type: str


class RangeStart(BaseModel):
    type: str


class RangeEnd(BaseModel):
    type: str


class Bill(BaseModel):
    type: str


class BillWithinBillingLimit(BaseModel):
    type: str


class BillDailyBreakdown(BaseModel):
    type: str


class CallActive(BaseModel):
    type: str


class CallActiveWithinConcurrencyLimit(BaseModel):
    type: str


class CallMinutes(BaseModel):
    type: str


class CallMinutesDailyBreakdown(BaseModel):
    type: str


class CallMinutesAverage(BaseModel):
    type: str


class CallMinutesAverageDailyBreakdown(BaseModel):
    type: str


class CallCount(BaseModel):
    type: str


class CallCountDailyBreakdown(BaseModel):
    type: str


class Properties177(BaseModel):
    orgId: OrgId25
    rangeStart: RangeStart
    rangeEnd: RangeEnd
    bill: Bill
    billWithinBillingLimit: BillWithinBillingLimit
    billDailyBreakdown: BillDailyBreakdown
    callActive: CallActive
    callActiveWithinConcurrencyLimit: CallActiveWithinConcurrencyLimit
    callMinutes: CallMinutes
    callMinutesDailyBreakdown: CallMinutesDailyBreakdown
    callMinutesAverage: CallMinutesAverage
    callMinutesAverageDailyBreakdown: CallMinutesAverageDailyBreakdown
    callCount: CallCount
    callCountDailyBreakdown: CallCountDailyBreakdown


class Metrics(BaseModel):
    type: str
    properties: Properties177
    required: List[str]


class Step(BaseModel):
    type: str
    description: str
    enum: List[str]


class Start(BaseModel):
    format: str
    type: str
    description: str


class End(BaseModel):
    format: str
    type: str
    description: str


class Timezone(BaseModel):
    type: str
    description: str


class Properties178(BaseModel):
    step: Step
    start: Start
    end: End
    timezone: Timezone


class TimeRange(BaseModel):
    type: str
    properties: Properties178


class Operation(BaseModel):
    type: str
    description: str
    enum: List[str]


class Column(BaseModel):
    type: str
    description: str
    enum: List[str]


class Alias(BaseModel):
    type: str
    description: str
    maxLength: int


class Properties179(BaseModel):
    operation: Operation
    column: Column
    alias: Alias


class AnalyticsOperation(BaseModel):
    type: str
    properties: Properties179
    required: List[str]


class Table(BaseModel):
    type: str
    description: str
    enum: List[str]


class Items144(BaseModel):
    type: str
    enum: List[str]


class GroupBy(BaseModel):
    type: str
    description: str
    enum: List[str]
    items: Items144


class Name42(BaseModel):
    type: str
    description: str
    maxLength: int


class TimeRange1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items145(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Operations(BaseModel):
    description: str
    type: str
    items: Items145


class Properties180(BaseModel):
    table: Table
    groupBy: GroupBy
    name: Name42
    timeRange: TimeRange1
    operations: Operations


class AnalyticsQuery(BaseModel):
    type: str
    properties: Properties180
    required: List[str]


class Queries(BaseModel):
    description: str
    type: str
    items: Items145


class Properties181(BaseModel):
    queries: Queries


class AnalyticsQueryDTO(BaseModel):
    type: str
    properties: Properties181
    required: List[str]


class Name43(BaseModel):
    type: str
    description: str


class TimeRange2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items147(BaseModel):
    type: str


class Result(BaseModel):
    description: str
    type: str
    items: Items147


class Properties182(BaseModel):
    name: Name43
    timeRange: TimeRange2
    result: Result


class AnalyticsQueryResult(BaseModel):
    type: str
    properties: Properties182
    required: List[str]


class OrgId26(BaseModel):
    type: str
    description: str


class Log(BaseModel):
    type: str
    description: str


class Level(BaseModel):
    type: str
    description: str
    enum: List[str]


class Time(BaseModel):
    format: str
    type: str
    description: str


class Properties183(BaseModel):
    callId: CallId
    orgId: OrgId26
    log: Log
    level: Level
    time: Time


class CallLogPrivileged(BaseModel):
    type: str
    properties: Properties183
    required: List[str]


class Items148(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Results3(BaseModel):
    type: str
    items: Items148


class Metadata12(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties184(BaseModel):
    results: Results3
    metadata: Metadata12


class CallLogsPaginatedResponse(BaseModel):
    type: str
    properties: Properties184
    required: List[str]


class Message5(BaseModel):
    type: str


class Properties185(BaseModel):
    message: Message5


class Error(BaseModel):
    type: str
    properties: Properties185
    required: List[str]


class Time1(BaseModel):
    type: str
    description: str


class Type51(BaseModel):
    type: str
    description: str
    enum: List[str]


class WebhookType(BaseModel):
    type: str
    description: str


class Resource(BaseModel):
    type: str
    description: str
    enum: List[str]


class RequestDurationSeconds(BaseModel):
    type: str
    description: str
    minimum: int


class RequestStartedAt(BaseModel):
    type: str
    description: str


class RequestFinishedAt(BaseModel):
    type: str
    description: str


class RequestBody(BaseModel):
    type: str
    description: str


class RequestHttpMethod(BaseModel):
    type: str
    description: str
    enum: List[str]


class RequestUrl(BaseModel):
    type: str
    description: str


class RequestPath(BaseModel):
    type: str
    description: str


class RequestQuery(BaseModel):
    type: str
    description: str


class ResponseHttpCode(BaseModel):
    type: str
    description: str


class RequestIpAddress(BaseModel):
    type: str
    description: str


class RequestOrigin(BaseModel):
    type: str
    description: str


class ResponseBody(BaseModel):
    type: str
    description: str


class RequestHeaders(BaseModel):
    type: str
    description: str


class Error1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties186(BaseModel):
    time: Time1
    orgId: OrgId26
    type: Type51
    webhookType: WebhookType
    resource: Resource
    requestDurationSeconds: RequestDurationSeconds
    requestStartedAt: RequestStartedAt
    requestFinishedAt: RequestFinishedAt
    requestBody: RequestBody
    requestHttpMethod: RequestHttpMethod
    requestUrl: RequestUrl
    requestPath: RequestPath
    requestQuery: RequestQuery
    responseHttpCode: ResponseHttpCode
    requestIpAddress: RequestIpAddress
    requestOrigin: RequestOrigin
    responseBody: ResponseBody
    requestHeaders: RequestHeaders
    error: Error1
    assistantId: AssistantId1
    phoneNumberId: PhoneNumberId
    customerId: CustomerId
    squadId: SquadId
    callId: CallId


class Log1(BaseModel):
    type: str
    properties: Properties186
    required: List[str]


class Results4(BaseModel):
    type: str
    items: Items148


class Properties187(BaseModel):
    results: Results4
    metadata: Metadata12


class LogsPaginatedResponse(BaseModel):
    type: str
    properties: Properties187
    required: List[str]


class Messages47(BaseModel):
    type: str
    items: Items148


class AssistantId18(BaseModel):
    type: str


class Assistant6(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AssistantOverrides6(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties188(BaseModel):
    messages: Messages47
    assistantId: AssistantId18
    assistant: Assistant6
    assistantOverrides: AssistantOverrides6


class ChatDTO(BaseModel):
    type: str
    properties: Properties188
    required: List[str]


class Provider55(BaseModel):
    type: str
    enum: List[str]


class ApiKey(BaseModel):
    type: str
    maxLength: int
    description: str


class Name44(BaseModel):
    type: str
    description: str
    minLength: int
    maxLength: int


class Properties189(BaseModel):
    provider: Provider55
    apiKey: ApiKey
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name44


class AnthropicCredential(BaseModel):
    type: str
    properties: Properties189
    required: List[str]


class Properties190(BaseModel):
    provider: Provider55
    apiKey: ApiKey
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name44


class AnyscaleCredential(BaseModel):
    type: str
    properties: Properties190
    required: List[str]


class ApiKey2(BaseModel):
    type: str
    description: str


class Properties191(BaseModel):
    provider: Provider55
    apiKey: ApiKey2
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name44


class AssemblyAICredential(BaseModel):
    type: str
    properties: Properties191
    required: List[str]


class Service(BaseModel):
    type: str
    description: str
    enum: List[str]
    default: str


class Region(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey3(BaseModel):
    type: str
    description: str
    maxLength: int


class Properties192(BaseModel):
    provider: Provider55
    service: Service
    region: Region
    apiKey: ApiKey3
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name44


class AzureCredential(BaseModel):
    type: str
    properties: Properties192
    required: List[str]


class Region1(BaseModel):
    type: str
    enum: List[str]


class Items151(BaseModel):
    type: str
    enum: List[str]


class Models(BaseModel):
    type: str
    enum: List[str]
    example: List[str]
    items: Items151


class OpenAIKey(BaseModel):
    type: str
    maxLength: int
    description: str


class OpenAIEndpoint(BaseModel):
    type: str
    maxLength: int


class Properties193(BaseModel):
    provider: Provider55
    region: Region1
    models: Models
    openAIKey: OpenAIKey
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name44
    openAIEndpoint: OpenAIEndpoint


class AzureOpenAICredential(BaseModel):
    type: str
    properties: Properties193
    required: List[str]


class Ip(BaseModel):
    type: str
    description: str


class Port(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class Netmask(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class InboundEnabled(BaseModel):
    type: str
    description: str


class OutboundEnabled(BaseModel):
    type: str
    description: str


class OutboundProtocol(BaseModel):
    type: str
    description: str
    enum: List[str]


class OptionsPingEnabled(BaseModel):
    type: str
    description: str


class Properties194(BaseModel):
    ip: Ip
    port: Port
    netmask: Netmask
    inboundEnabled: InboundEnabled
    outboundEnabled: OutboundEnabled
    outboundProtocol: OutboundProtocol
    optionsPingEnabled: OptionsPingEnabled


class SipTrunkGateway(BaseModel):
    type: str
    properties: Properties194
    required: List[str]


class Domain(BaseModel):
    type: str


class Username1(BaseModel):
    type: str


class Realm1(BaseModel):
    type: str


class Properties195(BaseModel):
    domain: Domain
    username: Username1
    realm: Realm1


class SipTrunkOutboundSipRegisterPlan(BaseModel):
    type: str
    properties: Properties195


class AuthPassword(BaseModel):
    type: str
    description: str


class AuthUsername(BaseModel):
    type: str


class SipRegisterPlan(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties196(BaseModel):
    authPassword: AuthPassword
    authUsername: AuthUsername
    sipRegisterPlan: SipRegisterPlan


class SipTrunkOutboundAuthenticationPlan(BaseModel):
    type: str
    properties: Properties196


class SbcConfiguration(BaseModel):
    type: str
    properties: Dict[str, Any]


class Provider60(BaseModel):
    type: str
    description: str
    enum: List[str]


class Items152(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Gateways(BaseModel):
    description: str
    type: str
    items: Items152


class OutboundAuthenticationPlan(BaseModel):
    description: str
    allOf: List[AllOfItem]


class OutboundLeadingPlusEnabled(BaseModel):
    type: str
    description: str


class TechPrefix(BaseModel):
    type: str
    description: str
    maxLength: int


class SipDiversionHeader(BaseModel):
    type: str
    description: str
    maxLength: int


class SbcConfiguration1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties197(BaseModel):
    provider: Provider60
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name44
    gateways: Gateways
    outboundAuthenticationPlan: OutboundAuthenticationPlan
    outboundLeadingPlusEnabled: OutboundLeadingPlusEnabled
    techPrefix: TechPrefix
    sipDiversionHeader: SipDiversionHeader
    sbcConfiguration: SbcConfiguration1


class ByoSipTrunkCredential(BaseModel):
    type: str
    properties: Properties197
    required: List[str]


class Provider61(BaseModel):
    type: str
    enum: List[str]


class ApiKey4(BaseModel):
    type: str
    description: str


class Properties198(BaseModel):
    provider: Provider61
    apiKey: ApiKey4
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name44


class CartesiaCredential(BaseModel):
    type: str
    properties: Properties198
    required: List[str]


class Type52(BaseModel):
    type: str
    enum: List[str]


class Url3(BaseModel):
    type: str
    description: str


class ClientId(BaseModel):
    type: str
    description: str


class ClientSecret(BaseModel):
    type: str
    description: str


class Properties199(BaseModel):
    type: Type52
    url: Url3
    clientId: ClientId
    clientSecret: ClientSecret


class OAuth2AuthenticationPlan(BaseModel):
    type: str
    properties: Properties199
    required: List[str]


class AccessToken(BaseModel):
    type: str
    description: str


class ExpiresAt(BaseModel):
    format: str
    type: str
    description: str


class Properties200(BaseModel):
    accessToken: AccessToken
    expiresAt: ExpiresAt


class Oauth2AuthenticationSession(BaseModel):
    type: str
    properties: Properties200


class ApiKey5(BaseModel):
    type: str
    maxLength: int
    description: str


class AuthenticationPlan(BaseModel):
    description: str
    allOf: List[AllOfItem]


class AuthenticationSession(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties201(BaseModel):
    provider: Provider61
    apiKey: ApiKey5
    authenticationPlan: AuthenticationPlan
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    authenticationSession: AuthenticationSession
    name: Name44


class CustomLLMCredential(BaseModel):
    type: str
    properties: Properties201
    required: List[str]


class ApiKey6(BaseModel):
    type: str
    description: str


class ApiUrl(BaseModel):
    type: str
    description: str


class Properties202(BaseModel):
    provider: Provider61
    apiKey: ApiKey6
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name44
    apiUrl: ApiUrl


class DeepgramCredential(BaseModel):
    type: str
    properties: Properties202
    required: List[str]


class Properties203(BaseModel):
    provider: Provider61
    apiKey: ApiKey6
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name44


class DeepInfraCredential(BaseModel):
    type: str
    properties: Properties203
    required: List[str]


class ApiKey8(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties204(BaseModel):
    provider: Provider61
    apiKey: ApiKey8
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name44


class ElevenLabsCredential(BaseModel):
    type: str
    properties: Properties204
    required: List[str]


class Type53(BaseModel):
    type: str
    description: str


class ProjectId(BaseModel):
    type: str
    description: str


class PrivateKeyId(BaseModel):
    type: str
    description: str


class PrivateKey(BaseModel):
    type: str
    description: str


class ClientEmail(BaseModel):
    type: str
    description: str


class AuthUri(BaseModel):
    type: str
    description: str


class TokenUri(BaseModel):
    type: str
    description: str


class AuthProviderX509CertUrl(BaseModel):
    type: str
    description: str


class ClientX509CertUrl(BaseModel):
    type: str
    description: str


class UniverseDomain(BaseModel):
    type: str
    description: str


class Properties205(BaseModel):
    type: Type53
    projectId: ProjectId
    privateKeyId: PrivateKeyId
    privateKey: PrivateKey
    clientEmail: ClientEmail
    clientId: ClientId
    authUri: AuthUri
    tokenUri: TokenUri
    authProviderX509CertUrl: AuthProviderX509CertUrl
    clientX509CertUrl: ClientX509CertUrl
    universeDomain: UniverseDomain


class GcpKey(BaseModel):
    type: str
    properties: Properties205
    required: List[str]


class Name55(BaseModel):
    type: str
    description: str


class Region2(BaseModel):
    type: str
    description: str


class Path1(BaseModel):
    type: str
    description: str


class HmacAccessKey(BaseModel):
    type: str
    description: str


class HmacSecret(BaseModel):
    type: str
    description: str


class Properties206(BaseModel):
    name: Name55
    region: Region2
    path: Path1
    hmacAccessKey: HmacAccessKey
    hmacSecret: HmacSecret


class BucketPlan(BaseModel):
    type: str
    properties: Properties206
    required: List[str]


class Name56(BaseModel):
    type: str
    description: str
    minLength: int
    maxLength: int


class GcpKey1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class BucketPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties207(BaseModel):
    provider: Provider61
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56
    gcpKey: GcpKey1
    bucketPlan: BucketPlan1


class GcpCredential(BaseModel):
    type: str
    properties: Properties207
    required: List[str]


class ApiKey9(BaseModel):
    type: str
    description: str


class Properties208(BaseModel):
    provider: Provider61
    apiKey: ApiKey9
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class GladiaCredential(BaseModel):
    type: str
    properties: Properties208
    required: List[str]


class Properties209(BaseModel):
    provider: Provider61
    apiKey: ApiKey9
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class GoHighLevelCredential(BaseModel):
    type: str
    properties: Properties209
    required: List[str]


class Provider69(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey11(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties210(BaseModel):
    provider: Provider69
    apiKey: ApiKey11
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class GoogleCredential(BaseModel):
    type: str
    properties: Properties210
    required: List[str]


class Provider70(BaseModel):
    type: str
    enum: List[str]


class ApiKey12(BaseModel):
    type: str
    description: str


class Properties211(BaseModel):
    provider: Provider70
    apiKey: ApiKey12
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class GroqCredential(BaseModel):
    type: str
    properties: Properties211
    required: List[str]


class Provider71(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey13(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties212(BaseModel):
    provider: Provider71
    apiKey: ApiKey13
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class InflectionAICredential(BaseModel):
    type: str
    properties: Properties212
    required: List[str]


class Provider72(BaseModel):
    type: str
    enum: List[str]


class PublicKey(BaseModel):
    type: str
    description: str


class ApiKey14(BaseModel):
    type: str
    description: str


class Properties213(BaseModel):
    provider: Provider72
    publicKey: PublicKey
    apiKey: ApiKey14
    apiUrl: ApiUrl
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class LangfuseCredential(BaseModel):
    type: str
    properties: Properties213
    required: List[str]


class Properties214(BaseModel):
    provider: Provider72
    apiKey: ApiKey14
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class LmntCredential(BaseModel):
    type: str
    properties: Properties214
    required: List[str]


class TeamId(BaseModel):
    type: str
    description: str


class Properties215(BaseModel):
    provider: Provider72
    teamId: TeamId
    region: Region2
    apiKey: ApiKey14
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class MakeCredential(BaseModel):
    type: str
    properties: Properties215
    required: List[str]


class Properties216(BaseModel):
    provider: Provider72
    apiKey: ApiKey14
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class OpenAICredential(BaseModel):
    type: str
    properties: Properties216
    required: List[str]


class Properties217(BaseModel):
    provider: Provider72
    apiKey: ApiKey14
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class OpenRouterCredential(BaseModel):
    type: str
    properties: Properties217
    required: List[str]


class Properties218(BaseModel):
    provider: Provider72
    apiKey: ApiKey14
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class PerplexityAICredential(BaseModel):
    type: str
    properties: Properties218
    required: List[str]


class UserId(BaseModel):
    type: str


class Properties219(BaseModel):
    provider: Provider72
    apiKey: ApiKey14
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56
    userId: UserId


class PlayHTCredential(BaseModel):
    type: str
    properties: Properties219
    required: List[str]


class Properties220(BaseModel):
    provider: Provider72
    apiKey: ApiKey14
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class RimeAICredential(BaseModel):
    type: str
    properties: Properties220
    required: List[str]


class Properties221(BaseModel):
    provider: Provider72
    apiKey: ApiKey14
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class RunpodCredential(BaseModel):
    type: str
    properties: Properties221
    required: List[str]


class Provider81(BaseModel):
    type: str
    enum: List[str]
    description: str


class AwsAccessKeyId(BaseModel):
    type: str
    description: str


class AwsSecretAccessKey(BaseModel):
    type: str
    description: str


class S3BucketName(BaseModel):
    type: str
    description: str


class S3PathPrefix(BaseModel):
    type: str
    description: str


class Properties222(BaseModel):
    provider: Provider81
    awsAccessKeyId: AwsAccessKeyId
    awsSecretAccessKey: AwsSecretAccessKey
    region: Region2
    s3BucketName: S3BucketName
    s3PathPrefix: S3PathPrefix
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class S3Credential(BaseModel):
    type: str
    properties: Properties222
    required: List[str]


class Provider82(BaseModel):
    type: str
    enum: List[str]


class Properties223(BaseModel):
    provider: Provider82
    apiKey: ApiKey14
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class TavusCredential(BaseModel):
    type: str
    properties: Properties223
    required: List[str]


class Properties224(BaseModel):
    provider: Provider82
    apiKey: ApiKey14
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class TogetherAICredential(BaseModel):
    type: str
    properties: Properties224
    required: List[str]


class AuthToken(BaseModel):
    type: str
    description: str


class AccountSid(BaseModel):
    type: str


class Properties225(BaseModel):
    provider: Provider82
    authToken: AuthToken
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56
    accountSid: AccountSid


class TwilioCredential(BaseModel):
    type: str
    properties: Properties225
    required: List[str]


class VonageApplicationPrivateKey(BaseModel):
    type: str
    description: str
    maxLength: int


class ApiSecret(BaseModel):
    type: str
    description: str


class VonageApplicationId(BaseModel):
    type: str
    description: str
    maxLength: int


class ApiKey25(BaseModel):
    type: str


class Properties226(BaseModel):
    vonageApplicationPrivateKey: VonageApplicationPrivateKey
    provider: Provider82
    apiSecret: ApiSecret
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    vonageApplicationId: VonageApplicationId
    name: Name56
    apiKey: ApiKey25


class VonageCredential(BaseModel):
    type: str
    properties: Properties226
    required: List[str]


class AuthenticationPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class AuthenticationSession1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties227(BaseModel):
    provider: Provider82
    authenticationPlan: AuthenticationPlan1
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    authenticationSession: AuthenticationSession1
    name: Name56


class WebhookCredential(BaseModel):
    type: str
    properties: Properties227
    required: List[str]


class Provider87(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey26(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties228(BaseModel):
    provider: Provider87
    apiKey: ApiKey26
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    name: Name56


class XAiCredential(BaseModel):
    type: str
    properties: Properties228
    required: List[str]


class Provider88(BaseModel):
    type: str
    enum: List[str]


class Properties229(BaseModel):
    provider: Provider88
    apiKey: ApiKey26
    name: Name56


class CreateAnthropicCredentialDTO(BaseModel):
    type: str
    properties: Properties229
    required: List[str]


class Properties230(BaseModel):
    provider: Provider88
    apiKey: ApiKey26
    name: Name56


class CreateAnyscaleCredentialDTO(BaseModel):
    type: str
    properties: Properties230
    required: List[str]


class ApiKey29(BaseModel):
    type: str
    description: str


class Properties231(BaseModel):
    provider: Provider88
    apiKey: ApiKey29
    name: Name56


class CreateAssemblyAICredentialDTO(BaseModel):
    type: str
    properties: Properties231
    required: List[str]


class Region5(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey30(BaseModel):
    type: str
    description: str
    maxLength: int


class Properties232(BaseModel):
    provider: Provider88
    service: Service
    region: Region5
    apiKey: ApiKey30
    name: Name56


class CreateAzureCredentialDTO(BaseModel):
    type: str
    properties: Properties232
    required: List[str]


class Region6(BaseModel):
    type: str
    enum: List[str]


class Items153(BaseModel):
    type: str
    enum: List[str]


class Models1(BaseModel):
    type: str
    enum: List[str]
    example: List[str]
    items: Items153


class Properties233(BaseModel):
    provider: Provider88
    region: Region6
    models: Models1
    openAIKey: OpenAIKey
    openAIEndpoint: OpenAIEndpoint
    name: Name56


class CreateAzureOpenAICredentialDTO(BaseModel):
    type: str
    properties: Properties233
    required: List[str]


class Provider93(BaseModel):
    type: str
    description: str
    enum: List[str]


class Items154(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Gateways1(BaseModel):
    description: str
    type: str
    items: Items154


class OutboundAuthenticationPlan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class SbcConfiguration2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties234(BaseModel):
    provider: Provider93
    gateways: Gateways1
    outboundAuthenticationPlan: OutboundAuthenticationPlan1
    outboundLeadingPlusEnabled: OutboundLeadingPlusEnabled
    techPrefix: TechPrefix
    sipDiversionHeader: SipDiversionHeader
    sbcConfiguration: SbcConfiguration2
    name: Name56


class CreateByoSipTrunkCredentialDTO(BaseModel):
    type: str
    properties: Properties234
    required: List[str]


class Provider94(BaseModel):
    type: str
    enum: List[str]


class ApiKey31(BaseModel):
    type: str
    description: str


class Properties235(BaseModel):
    provider: Provider94
    apiKey: ApiKey31
    name: Name56


class CreateCartesiaCredentialDTO(BaseModel):
    type: str
    properties: Properties235
    required: List[str]


class ApiKey32(BaseModel):
    type: str
    maxLength: int
    description: str


class AuthenticationPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties236(BaseModel):
    provider: Provider94
    apiKey: ApiKey32
    authenticationPlan: AuthenticationPlan2
    name: Name56


class CreateCustomLLMCredentialDTO(BaseModel):
    type: str
    properties: Properties236
    required: List[str]


class ApiKey33(BaseModel):
    type: str
    description: str


class Properties237(BaseModel):
    provider: Provider94
    apiKey: ApiKey33
    apiUrl: ApiUrl
    name: Name56


class CreateDeepgramCredentialDTO(BaseModel):
    type: str
    properties: Properties237
    required: List[str]


class Properties238(BaseModel):
    provider: Provider94
    apiKey: ApiKey33
    name: Name56


class CreateDeepInfraCredentialDTO(BaseModel):
    type: str
    properties: Properties238
    required: List[str]


class ApiKey35(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties239(BaseModel):
    provider: Provider94
    apiKey: ApiKey35
    name: Name56


class CreateElevenLabsCredentialDTO(BaseModel):
    type: str
    properties: Properties239
    required: List[str]


class GcpKey2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class BucketPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties240(BaseModel):
    provider: Provider94
    gcpKey: GcpKey2
    bucketPlan: BucketPlan2
    name: Name56


class CreateGcpCredentialDTO(BaseModel):
    type: str
    properties: Properties240
    required: List[str]


class ApiKey36(BaseModel):
    type: str
    description: str


class Properties241(BaseModel):
    provider: Provider94
    apiKey: ApiKey36
    name: Name56


class CreateGladiaCredentialDTO(BaseModel):
    type: str
    properties: Properties241
    required: List[str]


class Properties242(BaseModel):
    provider: Provider94
    apiKey: ApiKey36
    name: Name56


class CreateGoHighLevelCredentialDTO(BaseModel):
    type: str
    properties: Properties242
    required: List[str]


class Provider102(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey38(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties243(BaseModel):
    provider: Provider102
    apiKey: ApiKey38
    name: Name56


class CreateGoogleCredentialDTO(BaseModel):
    type: str
    properties: Properties243
    required: List[str]


class Provider103(BaseModel):
    type: str
    enum: List[str]


class ApiKey39(BaseModel):
    type: str
    description: str


class Properties244(BaseModel):
    provider: Provider103
    apiKey: ApiKey39
    name: Name56


class CreateGroqCredentialDTO(BaseModel):
    type: str
    properties: Properties244
    required: List[str]


class Provider104(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey40(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties245(BaseModel):
    provider: Provider104
    apiKey: ApiKey40
    name: Name56


class CreateInflectionAICredentialDTO(BaseModel):
    type: str
    properties: Properties245
    required: List[str]


class Provider105(BaseModel):
    type: str
    enum: List[str]


class ApiKey41(BaseModel):
    type: str
    description: str


class Properties246(BaseModel):
    provider: Provider105
    publicKey: PublicKey
    apiKey: ApiKey41
    apiUrl: ApiUrl
    name: Name56


class CreateLangfuseCredentialDTO(BaseModel):
    type: str
    properties: Properties246
    required: List[str]


class Properties247(BaseModel):
    provider: Provider105
    apiKey: ApiKey41
    name: Name56


class CreateLmntCredentialDTO(BaseModel):
    type: str
    properties: Properties247
    required: List[str]


class Region7(BaseModel):
    type: str
    description: str


class Properties248(BaseModel):
    provider: Provider105
    teamId: TeamId
    region: Region7
    apiKey: ApiKey41
    name: Name56


class CreateMakeCredentialDTO(BaseModel):
    type: str
    properties: Properties248
    required: List[str]


class Properties249(BaseModel):
    provider: Provider105
    apiKey: ApiKey41
    name: Name56


class CreateOpenAICredentialDTO(BaseModel):
    type: str
    properties: Properties249
    required: List[str]


class Properties250(BaseModel):
    provider: Provider105
    apiKey: ApiKey41
    name: Name56


class CreateOpenRouterCredentialDTO(BaseModel):
    type: str
    properties: Properties250
    required: List[str]


class Properties251(BaseModel):
    provider: Provider105
    apiKey: ApiKey41
    name: Name56


class CreatePerplexityAICredentialDTO(BaseModel):
    type: str
    properties: Properties251
    required: List[str]


class Properties252(BaseModel):
    provider: Provider105
    apiKey: ApiKey41
    userId: UserId
    name: Name56


class CreatePlayHTCredentialDTO(BaseModel):
    type: str
    properties: Properties252
    required: List[str]


class Properties253(BaseModel):
    provider: Provider105
    apiKey: ApiKey41
    name: Name56


class CreateRimeAICredentialDTO(BaseModel):
    type: str
    properties: Properties253
    required: List[str]


class Properties254(BaseModel):
    provider: Provider105
    apiKey: ApiKey41
    name: Name56


class CreateRunpodCredentialDTO(BaseModel):
    type: str
    properties: Properties254
    required: List[str]


class Provider114(BaseModel):
    type: str
    enum: List[str]
    description: str


class Properties255(BaseModel):
    provider: Provider114
    awsAccessKeyId: AwsAccessKeyId
    awsSecretAccessKey: AwsSecretAccessKey
    region: Region7
    s3BucketName: S3BucketName
    s3PathPrefix: S3PathPrefix
    name: Name56


class CreateS3CredentialDTO(BaseModel):
    type: str
    properties: Properties255
    required: List[str]


class Provider115(BaseModel):
    type: str
    enum: List[str]


class Properties256(BaseModel):
    provider: Provider115
    apiKey: ApiKey41
    name: Name56


class CreateTavusCredentialDTO(BaseModel):
    type: str
    properties: Properties256
    required: List[str]


class Properties257(BaseModel):
    provider: Provider115
    apiKey: ApiKey41
    name: Name56


class CreateTogetherAICredentialDTO(BaseModel):
    type: str
    properties: Properties257
    required: List[str]


class Properties258(BaseModel):
    provider: Provider115
    authToken: AuthToken
    accountSid: AccountSid
    name: Name56


class CreateTwilioCredentialDTO(BaseModel):
    type: str
    properties: Properties258
    required: List[str]


class ApiKey52(BaseModel):
    type: str


class Properties259(BaseModel):
    provider: Provider115
    apiSecret: ApiSecret
    apiKey: ApiKey52
    name: Name56


class CreateVonageCredentialDTO(BaseModel):
    type: str
    properties: Properties259
    required: List[str]


class AuthenticationPlan3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties260(BaseModel):
    provider: Provider115
    authenticationPlan: AuthenticationPlan3
    name: Name56


class CreateWebhookCredentialDTO(BaseModel):
    type: str
    properties: Properties260
    required: List[str]


class Provider120(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey53(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties261(BaseModel):
    provider: Provider120
    apiKey: ApiKey53
    name: Name56


class CreateXAiCredentialDTO(BaseModel):
    type: str
    properties: Properties261
    required: List[str]


class Provider121(BaseModel):
    type: str
    enum: List[str]


class Properties262(BaseModel):
    provider: Provider121
    apiKey: ApiKey53
    name: Name56


class UpdateAnthropicCredentialDTO(BaseModel):
    type: str
    properties: Properties262
    required: List[str]


class Properties263(BaseModel):
    provider: Provider121
    apiKey: ApiKey53
    name: Name56


class UpdateAnyscaleCredentialDTO(BaseModel):
    type: str
    properties: Properties263
    required: List[str]


class ApiKey56(BaseModel):
    type: str
    description: str


class Properties264(BaseModel):
    provider: Provider121
    apiKey: ApiKey56
    name: Name56


class UpdateAssemblyAICredentialDTO(BaseModel):
    type: str
    properties: Properties264
    required: List[str]


class Region9(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey57(BaseModel):
    type: str
    description: str
    maxLength: int


class Properties265(BaseModel):
    provider: Provider121
    service: Service
    region: Region9
    apiKey: ApiKey57
    name: Name56


class UpdateAzureCredentialDTO(BaseModel):
    type: str
    properties: Properties265
    required: List[str]


class Region10(BaseModel):
    type: str
    enum: List[str]


class Items155(BaseModel):
    type: str
    enum: List[str]


class Models2(BaseModel):
    type: str
    enum: List[str]
    example: List[str]
    items: Items155


class Properties266(BaseModel):
    provider: Provider121
    region: Region10
    models: Models2
    openAIKey: OpenAIKey
    openAIEndpoint: OpenAIEndpoint
    name: Name56


class UpdateAzureOpenAICredentialDTO(BaseModel):
    type: str
    properties: Properties266
    required: List[str]


class Provider126(BaseModel):
    type: str
    description: str
    enum: List[str]


class Items156(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Gateways2(BaseModel):
    description: str
    type: str
    items: Items156


class OutboundAuthenticationPlan2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class SbcConfiguration3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties267(BaseModel):
    provider: Provider126
    gateways: Gateways2
    outboundAuthenticationPlan: OutboundAuthenticationPlan2
    outboundLeadingPlusEnabled: OutboundLeadingPlusEnabled
    techPrefix: TechPrefix
    sipDiversionHeader: SipDiversionHeader
    sbcConfiguration: SbcConfiguration3
    name: Name56


class UpdateByoSipTrunkCredentialDTO(BaseModel):
    type: str
    properties: Properties267
    required: List[str]


class Provider127(BaseModel):
    type: str
    enum: List[str]


class ApiKey58(BaseModel):
    type: str
    description: str


class Properties268(BaseModel):
    provider: Provider127
    apiKey: ApiKey58
    name: Name56


class UpdateCartesiaCredentialDTO(BaseModel):
    type: str
    properties: Properties268
    required: List[str]


class ApiKey59(BaseModel):
    type: str
    maxLength: int
    description: str


class AuthenticationPlan4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties269(BaseModel):
    provider: Provider127
    apiKey: ApiKey59
    authenticationPlan: AuthenticationPlan4
    name: Name56


class UpdateCustomLLMCredentialDTO(BaseModel):
    type: str
    properties: Properties269
    required: List[str]


class ApiKey60(BaseModel):
    type: str
    description: str


class Properties270(BaseModel):
    provider: Provider127
    apiKey: ApiKey60
    apiUrl: ApiUrl
    name: Name56


class UpdateDeepgramCredentialDTO(BaseModel):
    type: str
    properties: Properties270
    required: List[str]


class Properties271(BaseModel):
    provider: Provider127
    apiKey: ApiKey60
    name: Name56


class UpdateDeepInfraCredentialDTO(BaseModel):
    type: str
    properties: Properties271
    required: List[str]


class ApiKey62(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties272(BaseModel):
    provider: Provider127
    apiKey: ApiKey62
    name: Name56


class UpdateElevenLabsCredentialDTO(BaseModel):
    type: str
    properties: Properties272
    required: List[str]


class GcpKey3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class BucketPlan3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties273(BaseModel):
    provider: Provider127
    gcpKey: GcpKey3
    bucketPlan: BucketPlan3
    name: Name56


class UpdateGcpCredentialDTO(BaseModel):
    type: str
    properties: Properties273
    required: List[str]


class ApiKey63(BaseModel):
    type: str
    description: str


class Properties274(BaseModel):
    provider: Provider127
    apiKey: ApiKey63
    name: Name56


class UpdateGladiaCredentialDTO(BaseModel):
    type: str
    properties: Properties274
    required: List[str]


class Properties275(BaseModel):
    provider: Provider127
    apiKey: ApiKey63
    name: Name56


class UpdateGoHighLevelCredentialDTO(BaseModel):
    type: str
    properties: Properties275
    required: List[str]


class Provider135(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey65(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties276(BaseModel):
    provider: Provider135
    apiKey: ApiKey65
    name: Name56


class UpdateGoogleCredentialDTO(BaseModel):
    type: str
    properties: Properties276
    required: List[str]


class Provider136(BaseModel):
    type: str
    enum: List[str]


class ApiKey66(BaseModel):
    type: str
    description: str


class Properties277(BaseModel):
    provider: Provider136
    apiKey: ApiKey66
    name: Name56


class UpdateGroqCredentialDTO(BaseModel):
    type: str
    properties: Properties277
    required: List[str]


class Provider137(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey67(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties278(BaseModel):
    provider: Provider137
    apiKey: ApiKey67
    name: Name56


class UpdateInflectionAICredentialDTO(BaseModel):
    type: str
    properties: Properties278
    required: List[str]


class Provider138(BaseModel):
    type: str
    enum: List[str]


class ApiKey68(BaseModel):
    type: str
    description: str


class Properties279(BaseModel):
    provider: Provider138
    publicKey: PublicKey
    apiKey: ApiKey68
    apiUrl: ApiUrl
    name: Name56


class UpdateLangfuseCredentialDTO(BaseModel):
    type: str
    properties: Properties279
    required: List[str]


class Properties280(BaseModel):
    provider: Provider138
    apiKey: ApiKey68
    name: Name56


class UpdateLmntCredentialDTO(BaseModel):
    type: str
    properties: Properties280
    required: List[str]


class Region11(BaseModel):
    type: str
    description: str


class Properties281(BaseModel):
    provider: Provider138
    teamId: TeamId
    region: Region11
    apiKey: ApiKey68
    name: Name56


class UpdateMakeCredentialDTO(BaseModel):
    type: str
    properties: Properties281
    required: List[str]


class Properties282(BaseModel):
    provider: Provider138
    apiKey: ApiKey68
    name: Name56


class UpdateOpenAICredentialDTO(BaseModel):
    type: str
    properties: Properties282
    required: List[str]


class Properties283(BaseModel):
    provider: Provider138
    apiKey: ApiKey68
    name: Name56


class UpdateOpenRouterCredentialDTO(BaseModel):
    type: str
    properties: Properties283
    required: List[str]


class Properties284(BaseModel):
    provider: Provider138
    apiKey: ApiKey68
    name: Name56


class UpdatePerplexityAICredentialDTO(BaseModel):
    type: str
    properties: Properties284
    required: List[str]


class Properties285(BaseModel):
    provider: Provider138
    apiKey: ApiKey68
    userId: UserId
    name: Name56


class UpdatePlayHTCredentialDTO(BaseModel):
    type: str
    properties: Properties285
    required: List[str]


class Properties286(BaseModel):
    provider: Provider138
    apiKey: ApiKey68
    name: Name56


class UpdateRimeAICredentialDTO(BaseModel):
    type: str
    properties: Properties286
    required: List[str]


class Properties287(BaseModel):
    provider: Provider138
    apiKey: ApiKey68
    name: Name56


class UpdateRunpodCredentialDTO(BaseModel):
    type: str
    properties: Properties287
    required: List[str]


class Provider147(BaseModel):
    type: str
    enum: List[str]
    description: str


class Properties288(BaseModel):
    provider: Provider147
    awsAccessKeyId: AwsAccessKeyId
    awsSecretAccessKey: AwsSecretAccessKey
    region: Region11
    s3BucketName: S3BucketName
    s3PathPrefix: S3PathPrefix
    name: Name56


class UpdateS3CredentialDTO(BaseModel):
    type: str
    properties: Properties288
    required: List[str]


class Provider148(BaseModel):
    type: str
    enum: List[str]


class Properties289(BaseModel):
    provider: Provider148
    apiKey: ApiKey68
    name: Name56


class UpdateTavusCredentialDTO(BaseModel):
    type: str
    properties: Properties289
    required: List[str]


class Properties290(BaseModel):
    provider: Provider148
    apiKey: ApiKey68
    name: Name56


class UpdateTogetherAICredentialDTO(BaseModel):
    type: str
    properties: Properties290
    required: List[str]


class Properties291(BaseModel):
    provider: Provider148
    authToken: AuthToken
    accountSid: AccountSid
    name: Name56


class UpdateTwilioCredentialDTO(BaseModel):
    type: str
    properties: Properties291
    required: List[str]


class ApiKey79(BaseModel):
    type: str


class Properties292(BaseModel):
    provider: Provider148
    apiSecret: ApiSecret
    apiKey: ApiKey79
    name: Name56


class UpdateVonageCredentialDTO(BaseModel):
    type: str
    properties: Properties292
    required: List[str]


class Provider152(BaseModel):
    type: str
    description: str
    enum: List[str]


class ApiKey80(BaseModel):
    type: str
    maxLength: int
    description: str


class Properties293(BaseModel):
    provider: Provider152
    apiKey: ApiKey80
    name: Name56


class UpdateXAiCredentialDTO(BaseModel):
    type: str
    properties: Properties293
    required: List[str]


class HipaaEnabled5(BaseModel):
    type: str
    description: str
    example: bool


class Name143(BaseModel):
    type: str
    description: str
    maxLength: int


class Channel(BaseModel):
    type: str
    description: str
    enum: List[str]


class BillingLimit(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class Server44(BaseModel):
    description: str
    allOf: List[AllOfItem]


class ConcurrencyLimit1(BaseModel):
    type: str
    description: str
    minimum: int
    maximum: int


class Properties294(BaseModel):
    hipaaEnabled: HipaaEnabled5
    subscriptionId: SubscriptionId
    name: Name143
    channel: Channel
    billingLimit: BillingLimit
    server: Server44
    concurrencyLimit: ConcurrencyLimit1


class CreateOrgDTO(BaseModel):
    type: str
    properties: Properties294


class Items157(BaseModel):
    type: str


class IncludedProviders(BaseModel):
    type: str
    items: Items157


class IncludedMinutes(BaseModel):
    type: str


class CostPerOverageMinute(BaseModel):
    type: str


class Properties295(BaseModel):
    includedProviders: IncludedProviders
    includedMinutes: IncludedMinutes
    costPerOverageMinute: CostPerOverageMinute


class OrgPlan(BaseModel):
    type: str
    properties: Properties295


class Subscription1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class StripeSubscriptionId(BaseModel):
    type: str
    description: str


class StripeSubscriptionItemId(BaseModel):
    type: str
    description: str


class StripeSubscriptionCurrentPeriodStart(BaseModel):
    format: str
    type: str
    description: str


class StripeSubscriptionStatus(BaseModel):
    type: str
    description: str


class Plan(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server45(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties296(BaseModel):
    hipaaEnabled: HipaaEnabled5
    subscription: Subscription1
    subscriptionId: SubscriptionId
    id: Id
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    stripeCustomerId: StripeCustomerId
    stripeSubscriptionId: StripeSubscriptionId
    stripeSubscriptionItemId: StripeSubscriptionItemId
    stripeSubscriptionCurrentPeriodStart: StripeSubscriptionCurrentPeriodStart
    stripeSubscriptionStatus: StripeSubscriptionStatus
    plan: Plan
    name: Name143
    channel: Channel
    billingLimit: BillingLimit
    server: Server45
    concurrencyLimit: ConcurrencyLimit1


class Org(BaseModel):
    type: str
    properties: Properties296
    required: List[str]


class Server46(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties297(BaseModel):
    hipaaEnabled: HipaaEnabled5
    subscriptionId: SubscriptionId
    name: Name143
    channel: Channel
    billingLimit: BillingLimit
    server: Server46
    concurrencyLimit: ConcurrencyLimit1


class UpdateOrgDTO(BaseModel):
    type: str
    properties: Properties297


class Email(BaseModel):
    type: str
    description: str


class FullName(BaseModel):
    type: str
    description: str


class Properties298(BaseModel):
    id: Id
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    email: Email
    fullName: FullName


class User(BaseModel):
    type: str
    properties: Properties298
    required: List[str]


class Emails(BaseModel):
    maxItems: int
    type: str
    items: Items157


class Role2(BaseModel):
    enum: List[str]
    type: str


class Properties299(BaseModel):
    emails: Emails
    role: Role2


class InviteUserDTO(BaseModel):
    type: str
    properties: Properties299
    required: List[str]


class Plan1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server47(BaseModel):
    description: str
    allOf: List[AllOfItem]


class InvitedByUserId(BaseModel):
    type: str


class Role3(BaseModel):
    type: str
    enum: List[str]


class Properties300(BaseModel):
    hipaaEnabled: HipaaEnabled5
    subscription: Subscription1
    subscriptionId: SubscriptionId
    id: Id
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    stripeCustomerId: StripeCustomerId
    stripeSubscriptionId: StripeSubscriptionId
    stripeSubscriptionItemId: StripeSubscriptionItemId
    stripeSubscriptionCurrentPeriodStart: StripeSubscriptionCurrentPeriodStart
    stripeSubscriptionStatus: StripeSubscriptionStatus
    plan: Plan1
    name: Name143
    channel: Channel
    billingLimit: BillingLimit
    server: Server47
    concurrencyLimit: ConcurrencyLimit1
    invitedByUserId: InvitedByUserId
    role: Role3


class OrgWithOrgUser(BaseModel):
    type: str
    properties: Properties300
    required: List[str]


class Role4(BaseModel):
    enum: List[str]
    type: str


class Properties301(BaseModel):
    userId: UserId
    role: Role4


class UpdateUserRoleDTO(BaseModel):
    type: str
    properties: Properties301
    required: List[str]


class VoiceId20(BaseModel):
    type: str


class Name147(BaseModel):
    type: str


class PublicOwnerId(BaseModel):
    type: str


class Description6(BaseModel):
    type: str


class Gender(BaseModel):
    type: str


class Age(BaseModel):
    type: str


class Accent(BaseModel):
    type: str


class Properties302(BaseModel):
    voiceId: VoiceId20
    name: Name147
    publicOwnerId: PublicOwnerId
    description: Description6
    gender: Gender
    age: Age
    accent: Accent


class VoiceLibraryVoiceResponse(BaseModel):
    type: str
    properties: Properties302
    required: List[str]


class OwnerId(BaseModel):
    type: str
    description: str


class VoiceId21(BaseModel):
    type: str
    description: str


class Name148(BaseModel):
    type: str
    description: str


class Properties303(BaseModel):
    ownerId: OwnerId
    voiceId: VoiceId21
    name: Name148


class AddVoiceToProviderDTO(BaseModel):
    type: str
    properties: Properties303
    required: List[str]


class ProviderId(BaseModel):
    type: str
    description: str


class Slug(BaseModel):
    type: str
    description: str


class Language12(BaseModel):
    type: str
    description: str


class LanguageCode(BaseModel):
    type: str
    description: str


class Model29(BaseModel):
    type: str
    description: str


class SupportedModels(BaseModel):
    type: str
    description: str


class Gender1(BaseModel):
    type: str
    description: str
    enum: List[str]


class Accent1(BaseModel):
    type: str
    description: str


class PreviewUrl(BaseModel):
    type: str
    description: str


class Description7(BaseModel):
    type: str
    description: str


class IsPublic(BaseModel):
    type: str
    description: str


class IsDeleted(BaseModel):
    type: str
    description: str


class Properties304(BaseModel):
    provider: Provider152
    providerId: ProviderId
    slug: Slug
    name: Name148
    language: Language12
    languageCode: LanguageCode
    model: Model29
    supportedModels: SupportedModels
    gender: Gender1
    accent: Accent1
    previewUrl: PreviewUrl
    description: Description7
    credentialId: CredentialId
    id: Id
    orgId: OrgId26
    isPublic: IsPublic
    isDeleted: IsDeleted
    createdAt: CreatedAt
    updatedAt: UpdatedAt


class VoiceLibrary(BaseModel):
    type: str
    properties: Properties304
    required: List[str]


class Labels(BaseModel):
    type: str
    description: str


class Items159(BaseModel):
    type: str
    format: str


class Files(BaseModel):
    description: str
    type: str
    items: Items159


class Properties305(BaseModel):
    name: Name148
    description: Description7
    labels: Labels
    files: Files


class CloneVoiceDTO(BaseModel):
    type: str
    properties: Properties305
    required: List[str]


class Title(BaseModel):
    type: str


class Description9(BaseModel):
    type: str


class VideoUrl(BaseModel):
    type: str


class DocsUrl(BaseModel):
    type: str


class Properties306(BaseModel):
    title: Title
    description: Description9
    videoUrl: VideoUrl
    docsUrl: DocsUrl


class ToolTemplateSetup(BaseModel):
    type: str
    properties: Properties306
    required: List[str]


class TemplateUrl(BaseModel):
    type: str
    description: str


class Items160(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class SetupInstructions(BaseModel):
    type: str
    items: Items160


class Type54(BaseModel):
    type: str
    enum: List[str]
    description: str


class ScenarioName(BaseModel):
    type: str


class TriggerHookName(BaseModel):
    type: str


class Properties307(BaseModel):
    templateUrl: TemplateUrl
    setupInstructions: SetupInstructions
    type: Type54
    scenarioId: ScenarioId
    scenarioName: ScenarioName
    triggerHookId: TriggerHookId
    triggerHookName: TriggerHookName


class MakeToolProviderDetails(BaseModel):
    type: str
    properties: Properties307
    required: List[str]


class SetupInstructions1(BaseModel):
    type: str
    items: Items160


class WorkflowName(BaseModel):
    type: str


class WebhookHookId(BaseModel):
    type: str


class WebhookHookName(BaseModel):
    type: str


class Properties308(BaseModel):
    templateUrl: TemplateUrl
    setupInstructions: SetupInstructions1
    type: Type54
    workflowId: WorkflowId
    workflowName: WorkflowName
    webhookHookId: WebhookHookId
    webhookHookName: WebhookHookName
    locationId: LocationId


class GhlToolProviderDetails(BaseModel):
    type: str
    properties: Properties308
    required: List[str]


class SetupInstructions2(BaseModel):
    type: str
    items: Items160


class Properties309(BaseModel):
    templateUrl: TemplateUrl
    setupInstructions: SetupInstructions2
    type: Type54


class FunctionToolProviderDetails(BaseModel):
    type: str
    properties: Properties309
    required: List[str]


class CollectionType(BaseModel):
    type: str


class CollectionId(BaseModel):
    type: str


class CollectionName(BaseModel):
    type: str


class Properties310(BaseModel):
    collectionType: CollectionType
    collectionId: CollectionId
    collectionName: CollectionName


class ToolTemplateMetadata(BaseModel):
    type: str
    properties: Properties310


class Details(BaseModel):
    oneOf: List[OneOfItem101]


class ProviderDetails(BaseModel):
    oneOf: List[OneOfItem101]


class Visibility(BaseModel):
    type: str
    default: str
    enum: List[str]


class Type57(BaseModel):
    type: str
    default: str
    enum: List[str]


class Name151(BaseModel):
    type: str
    description: str
    maxLength: int


class Provider154(BaseModel):
    type: str
    enum: List[str]


class Properties311(BaseModel):
    details: Details
    providerDetails: ProviderDetails
    metadata: Metadata12
    visibility: Visibility
    type: Type57
    name: Name151
    provider: Provider154


class CreateToolTemplateDTO(BaseModel):
    type: str
    properties: Properties311
    required: List[str]


class Details1(BaseModel):
    oneOf: List[OneOfItem101]


class ProviderDetails1(BaseModel):
    oneOf: List[OneOfItem101]


class Visibility1(BaseModel):
    default: str
    enum: List[str]
    type: str


class Provider155(BaseModel):
    enum: List[str]
    type: str


class Properties312(BaseModel):
    details: Details1
    providerDetails: ProviderDetails1
    metadata: Metadata12
    visibility: Visibility1
    type: Type57
    name: Name151
    provider: Provider155
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt


class Template(BaseModel):
    type: str
    properties: Properties312
    required: List[str]


class Details2(BaseModel):
    oneOf: List[OneOfItem101]


class ProviderDetails2(BaseModel):
    oneOf: List[OneOfItem101]


class Visibility2(BaseModel):
    type: str
    default: str
    enum: List[str]


class Provider156(BaseModel):
    type: str
    enum: List[str]


class Properties313(BaseModel):
    details: Details2
    providerDetails: ProviderDetails2
    metadata: Metadata12
    visibility: Visibility2
    type: Type57
    name: Name151
    provider: Provider156


class UpdateToolTemplateDTO(BaseModel):
    type: str
    properties: Properties313
    required: List[str]


class Enabled8(BaseModel):
    type: str
    description: str


class Items163(BaseModel):
    type: str


class AllowedOrigins(BaseModel):
    description: str
    type: str
    items: Items163


class AllowedAssistantIds(BaseModel):
    description: str
    type: str
    items: Items163


class AllowTransientAssistant(BaseModel):
    type: str
    description: str


class Properties314(BaseModel):
    enabled: Enabled8
    allowedOrigins: AllowedOrigins
    allowedAssistantIds: AllowedAssistantIds
    allowTransientAssistant: AllowTransientAssistant


class TokenRestrictions(BaseModel):
    type: str
    properties: Properties314


class Tag(BaseModel):
    type: str
    description: str
    enum: List[str]


class Restrictions(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties315(BaseModel):
    tag: Tag
    name: Name151
    restrictions: Restrictions


class CreateTokenDTO(BaseModel):
    type: str
    properties: Properties315


class Value3(BaseModel):
    type: str
    description: str


class Restrictions1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties316(BaseModel):
    tag: Tag
    id: Id
    orgId: OrgId26
    createdAt: CreatedAt
    updatedAt: UpdatedAt
    value: Value3
    name: Name151
    restrictions: Restrictions1


class Token(BaseModel):
    type: str
    properties: Properties316
    required: List[str]


class Items165(BaseModel):
    type: str
    enum: List[str]


class Providers(BaseModel):
    type: str
    description: str
    enum: List[str]
    items: Items165


class Properties317(BaseModel):
    providers: Providers


class SyncVoiceLibraryDTO(BaseModel):
    type: str
    properties: Properties317


class CompanySize(BaseModel):
    type: str
    description: str


class Source(BaseModel):
    type: str
    description: str


class CompanyType(BaseModel):
    type: str
    description: str


class CallVolume(BaseModel):
    type: str
    description: str


class UseCase(BaseModel):
    type: str
    description: str


class Properties318(BaseModel):
    companySize: CompanySize
    source: Source
    companyType: CompanyType
    callVolume: CallVolume
    orgId: OrgId26
    email: Email
    useCase: UseCase


class CreateEnterpriseInfoDTO(BaseModel):
    type: str
    properties: Properties318
    required: List[str]


class Properties319(BaseModel):
    id: Id
    companySize: CompanySize
    source: Source
    companyType: CompanyType
    callVolume: CallVolume
    orgId: OrgId26
    email: Email
    createdAt: CreatedAt
    updatedAt: UpdatedAt


class EnterpriseInfo(BaseModel):
    type: str
    properties: Properties319
    required: List[str]


class Type60(BaseModel):
    type: str
    description: str
    enum: List[str]


class Items166(BaseModel):
    oneOf: List[OneOfItem101]


class Messages48(BaseModel):
    type: str
    description: str
    items: Items166


class Items167(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MessagesOpenAIFormatted1(BaseModel):
    description: str
    type: str
    items: Items167


class Properties320(BaseModel):
    type: Type60
    messages: Messages48
    messagesOpenAIFormatted: MessagesOpenAIFormatted1


class ClientMessageConversationUpdate(BaseModel):
    type: str
    properties: Properties320
    required: List[str]


class Properties321(BaseModel):
    type: Type60


class ClientMessageHang(BaseModel):
    type: str
    properties: Properties321
    required: List[str]


class Metadata17(BaseModel):
    type: str
    description: str


class Properties322(BaseModel):
    type: Type60
    metadata: Metadata17


class ClientMessageMetadata(BaseModel):
    type: str
    properties: Properties322
    required: List[str]


class Output(BaseModel):
    type: str
    description: str


class Properties323(BaseModel):
    type: Type60
    output: Output


class ClientMessageModelOutput(BaseModel):
    type: str
    properties: Properties323
    required: List[str]


class Status4(BaseModel):
    type: str
    description: str
    enum: List[str]


class Role5(BaseModel):
    type: str
    description: str
    enum: List[str]


class Properties324(BaseModel):
    type: Type60
    status: Status4
    role: Role5


class ClientMessageSpeechUpdate(BaseModel):
    type: str
    properties: Properties324
    required: List[str]


class TranscriptType(BaseModel):
    type: str
    description: str
    enum: List[str]


class Properties325(BaseModel):
    type: Type60
    role: Role5
    transcriptType: TranscriptType
    transcript: Transcript


class ClientMessageTranscript(BaseModel):
    type: str
    properties: Properties325
    required: List[str]


class Name156(BaseModel):
    type: str
    description: str


class Arguments(BaseModel):
    type: str
    description: str


class Properties326(BaseModel):
    name: Name156
    arguments: Arguments


class ToolCallFunction(BaseModel):
    type: str
    properties: Properties326
    required: List[str]


class Function22(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties327(BaseModel):
    type: Type60
    function: Function22
    id: Id


class ToolCall(BaseModel):
    type: str
    properties: Properties327
    required: List[str]


class Items168(BaseModel):
    oneOf: List[OneOfItem101]


class ToolWithToolCallList(BaseModel):
    type: str
    description: str
    items: Items168


class Items169(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ToolCallList(BaseModel):
    description: str
    type: str
    items: Items169


class Properties328(BaseModel):
    type: Type60
    toolWithToolCallList: ToolWithToolCallList
    toolCallList: ToolCallList


class ClientMessageToolCalls(BaseModel):
    type: str
    properties: Properties328
    required: List[str]


class ToolCallResult(BaseModel):
    type: str
    description: str


class Properties329(BaseModel):
    type: Type60
    toolCallResult: ToolCallResult


class ClientMessageToolCallsResult(BaseModel):
    type: str
    properties: Properties329
    required: List[str]


class Destination1(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class ToAssistant(BaseModel):
    description: str
    allOf: List[AllOfItem]


class FromAssistant(BaseModel):
    description: str
    allOf: List[AllOfItem]


class ToStepRecord(BaseModel):
    type: str
    description: str


class FromStepRecord(BaseModel):
    type: str
    description: str


class Properties330(BaseModel):
    type: Type60
    destination: Destination1
    toAssistant: ToAssistant
    fromAssistant: FromAssistant
    toStepRecord: ToStepRecord
    fromStepRecord: FromStepRecord


class ClientMessageTransferUpdate(BaseModel):
    type: str
    properties: Properties330
    required: List[str]


class Properties331(BaseModel):
    type: Type60


class ClientMessageUserInterrupted(BaseModel):
    type: str
    properties: Properties331
    required: List[str]


class Properties332(BaseModel):
    type: Type60
    language: Language12


class ClientMessageLanguageChangeDetected(BaseModel):
    type: str
    properties: Properties332
    required: List[str]


class Input(BaseModel):
    type: str
    description: str


class Properties333(BaseModel):
    type: Type60
    input: Input


class ClientMessageVoiceInput(BaseModel):
    type: str
    properties: Properties333
    required: List[str]


class Message6(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Properties334(BaseModel):
    message: Message6


class ClientMessage(BaseModel):
    type: str
    properties: Properties334
    required: List[str]


class PhoneNumber3(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Timestamp(BaseModel):
    type: str
    description: str


class Artifact2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant7(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties335(BaseModel):
    phoneNumber: PhoneNumber3
    type: Type60
    timestamp: Timestamp
    artifact: Artifact2
    assistant: Assistant7
    customer: Customer3
    call: Call1


class ServerMessageAssistantRequest(BaseModel):
    type: str
    properties: Properties335
    required: List[str]


class PhoneNumber4(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Items170(BaseModel):
    oneOf: List[OneOfItem101]


class Messages49(BaseModel):
    type: str
    description: str
    items: Items170


class Items171(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MessagesOpenAIFormatted2(BaseModel):
    description: str
    type: str
    items: Items171


class Artifact3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant8(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties336(BaseModel):
    phoneNumber: PhoneNumber4
    type: Type60
    messages: Messages49
    messagesOpenAIFormatted: MessagesOpenAIFormatted2
    timestamp: Timestamp
    artifact: Artifact3
    assistant: Assistant8
    customer: Customer4
    call: Call2


class ServerMessageConversationUpdate(BaseModel):
    type: str
    properties: Properties336
    required: List[str]


class PhoneNumber5(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Items172(BaseModel):
    oneOf: List[OneOfItem101]


class Costs3(BaseModel):
    type: str
    description: str
    items: Items172


class Artifact4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant9(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call3(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Analysis2(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties337(BaseModel):
    phoneNumber: PhoneNumber5
    type: Type60
    endedReason: EndedReason
    cost: Cost
    costs: Costs3
    timestamp: Timestamp
    artifact: Artifact4
    assistant: Assistant9
    customer: Customer5
    call: Call3
    analysis: Analysis2
    startedAt: StartedAt
    endedAt: EndedAt


class ServerMessageEndOfCallReport(BaseModel):
    type: str
    properties: Properties337
    required: List[str]


class PhoneNumber6(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant10(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer6(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call4(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties338(BaseModel):
    phoneNumber: PhoneNumber6
    type: Type60
    timestamp: Timestamp
    artifact: Artifact5
    assistant: Assistant10
    customer: Customer6
    call: Call4


class ServerMessageHang(BaseModel):
    type: str
    properties: Properties338
    required: List[str]


class PhoneNumber7(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Items173(BaseModel):
    oneOf: List[OneOfItem101]


class Messages50(BaseModel):
    type: str
    description: str
    items: Items173


class Items174(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MessagesOpenAIFormatted3(BaseModel):
    description: str
    type: str
    items: Items174


class Artifact6(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant11(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer7(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties339(BaseModel):
    phoneNumber: PhoneNumber7
    type: Type60
    messages: Messages50
    messagesOpenAIFormatted: MessagesOpenAIFormatted3
    timestamp: Timestamp
    artifact: Artifact6
    assistant: Assistant11
    customer: Customer7
    call: Call5


class ServerMessageKnowledgeBaseRequest(BaseModel):
    type: str
    properties: Properties339
    required: List[str]


class PhoneNumber8(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact7(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant12(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer8(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call6(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties340(BaseModel):
    phoneNumber: PhoneNumber8
    type: Type60
    timestamp: Timestamp
    artifact: Artifact7
    assistant: Assistant12
    customer: Customer8
    call: Call6
    output: Output


class ServerMessageModelOutput(BaseModel):
    type: str
    properties: Properties340
    required: List[str]


class PhoneNumber9(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Request(BaseModel):
    type: str
    description: str
    enum: List[str]


class Destination2(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact8(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant13(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer9(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call7(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties341(BaseModel):
    phoneNumber: PhoneNumber9
    type: Type60
    request: Request
    destination: Destination2
    timestamp: Timestamp
    artifact: Artifact8
    assistant: Assistant13
    customer: Customer9
    call: Call7


class ServerMessagePhoneCallControl(BaseModel):
    type: str
    properties: Properties341
    required: List[str]


class PhoneNumber10(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact9(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant14(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer10(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call8(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties342(BaseModel):
    phoneNumber: PhoneNumber10
    type: Type60
    status: Status4
    role: Role5
    timestamp: Timestamp
    artifact: Artifact9
    assistant: Assistant14
    customer: Customer10
    call: Call8


class ServerMessageSpeechUpdate(BaseModel):
    type: str
    properties: Properties342
    required: List[str]


class PhoneNumber11(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Items175(BaseModel):
    oneOf: List[OneOfItem101]


class Messages51(BaseModel):
    type: str
    description: str
    items: Items175


class Items176(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MessagesOpenAIFormatted4(BaseModel):
    description: str
    type: str
    items: Items176


class Destination3(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact10(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant15(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer11(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call9(BaseModel):
    description: str
    allOf: List[AllOfItem]


class InboundPhoneCallDebuggingArtifacts(BaseModel):
    type: str
    description: str


class Properties343(BaseModel):
    phoneNumber: PhoneNumber11
    type: Type60
    status: Status4
    endedReason: EndedReason
    messages: Messages51
    messagesOpenAIFormatted: MessagesOpenAIFormatted4
    destination: Destination3
    timestamp: Timestamp
    artifact: Artifact10
    assistant: Assistant15
    customer: Customer11
    call: Call9
    transcript: Transcript
    inboundPhoneCallDebuggingArtifacts: InboundPhoneCallDebuggingArtifacts


class ServerMessageStatusUpdate(BaseModel):
    type: str
    properties: Properties343
    required: List[str]


class PhoneNumber12(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Items177(BaseModel):
    oneOf: List[OneOfItem101]


class ToolWithToolCallList1(BaseModel):
    type: str
    description: str
    items: Items177


class Artifact11(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant16(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer12(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call10(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Items178(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ToolCallList1(BaseModel):
    description: str
    type: str
    items: Items178


class Properties344(BaseModel):
    phoneNumber: PhoneNumber12
    type: Type60
    toolWithToolCallList: ToolWithToolCallList1
    timestamp: Timestamp
    artifact: Artifact11
    assistant: Assistant16
    customer: Customer12
    call: Call10
    toolCallList: ToolCallList1


class ServerMessageToolCalls(BaseModel):
    type: str
    properties: Properties344
    required: List[str]


class PhoneNumber13(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact12(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant17(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer13(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call11(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties345(BaseModel):
    phoneNumber: PhoneNumber13
    type: Type60
    timestamp: Timestamp
    artifact: Artifact12
    assistant: Assistant17
    customer: Customer13
    call: Call11


class ServerMessageTransferDestinationRequest(BaseModel):
    type: str
    properties: Properties345
    required: List[str]


class PhoneNumber14(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Destination4(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact13(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant18(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer14(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call12(BaseModel):
    description: str
    allOf: List[AllOfItem]


class ToAssistant1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class FromAssistant1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties346(BaseModel):
    phoneNumber: PhoneNumber14
    type: Type60
    destination: Destination4
    timestamp: Timestamp
    artifact: Artifact13
    assistant: Assistant18
    customer: Customer14
    call: Call12
    toAssistant: ToAssistant1
    fromAssistant: FromAssistant1
    toStepRecord: ToStepRecord
    fromStepRecord: FromStepRecord


class ServerMessageTransferUpdate(BaseModel):
    type: str
    properties: Properties346
    required: List[str]


class PhoneNumber15(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact14(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant19(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer15(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call13(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties347(BaseModel):
    phoneNumber: PhoneNumber15
    type: Type60
    timestamp: Timestamp
    artifact: Artifact14
    assistant: Assistant19
    customer: Customer15
    call: Call13
    role: Role5
    transcriptType: TranscriptType
    transcript: Transcript


class ServerMessageTranscript(BaseModel):
    type: str
    properties: Properties347
    required: List[str]


class PhoneNumber16(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact15(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant20(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer16(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call14(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties348(BaseModel):
    phoneNumber: PhoneNumber16
    type: Type60
    timestamp: Timestamp
    artifact: Artifact15
    assistant: Assistant20
    customer: Customer16
    call: Call14


class ServerMessageUserInterrupted(BaseModel):
    type: str
    properties: Properties348
    required: List[str]


class PhoneNumber17(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact16(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant21(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer17(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call15(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties349(BaseModel):
    phoneNumber: PhoneNumber17
    type: Type60
    timestamp: Timestamp
    artifact: Artifact16
    assistant: Assistant21
    customer: Customer17
    call: Call15
    language: Language12


class ServerMessageLanguageChangeDetected(BaseModel):
    type: str
    properties: Properties349
    required: List[str]


class PhoneNumber18(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact17(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant22(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer18(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call16(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties350(BaseModel):
    phoneNumber: PhoneNumber18
    type: Type60
    timestamp: Timestamp
    artifact: Artifact17
    assistant: Assistant22
    customer: Customer18
    call: Call16
    input: Input


class ServerMessageVoiceInput(BaseModel):
    type: str
    properties: Properties350
    required: List[str]


class PhoneNumber19(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Artifact18(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Assistant23(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Customer19(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Call17(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Text1(BaseModel):
    type: str
    description: str


class SampleRate(BaseModel):
    type: str
    description: str


class Properties351(BaseModel):
    phoneNumber: PhoneNumber19
    type: Type60
    timestamp: Timestamp
    artifact: Artifact18
    assistant: Assistant23
    customer: Customer19
    call: Call17
    text: Text1
    sampleRate: SampleRate


class ServerMessageVoiceRequest(BaseModel):
    type: str
    properties: Properties351
    required: List[str]


class Message7(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Properties352(BaseModel):
    message: Message7


class ServerMessage(BaseModel):
    type: str
    properties: Properties352
    required: List[str]


class Destination5(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class AssistantId19(BaseModel):
    type: str
    nullable: bool
    description: str


class Assistant24(BaseModel):
    description: str
    allOf: List[AllOfItem]


class AssistantOverrides7(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Squad5(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Error2(BaseModel):
    type: str
    description: str


class Properties353(BaseModel):
    destination: Destination5
    assistantId: AssistantId19
    assistant: Assistant24
    assistantOverrides: AssistantOverrides7
    squadId: SquadId
    squad: Squad5
    error: Error2


class ServerMessageResponseAssistantRequest(BaseModel):
    type: str
    properties: Properties353


class Content8(BaseModel):
    type: str
    description: str


class Similarity(BaseModel):
    type: str
    description: str


class Uuid(BaseModel):
    type: str
    description: str


class Properties354(BaseModel):
    content: Content8
    similarity: Similarity
    uuid: Uuid


class KnowledgeBaseResponseDocument(BaseModel):
    type: str
    properties: Properties354
    required: List[str]


class Documents(BaseModel):
    description: str
    type: str
    items: Items178


class Message8(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties355(BaseModel):
    documents: Documents
    message: Message8


class ServerMessageResponseKnowledgeBaseRequest(BaseModel):
    type: str
    properties: Properties355


class Items180(BaseModel):
    oneOf: List[OneOfItem101]


class Message9(BaseModel):
    type: str
    description: str
    items: Items180


class ToolCallId(BaseModel):
    type: str
    description: str


class Result1(BaseModel):
    type: str
    description: str


class Properties356(BaseModel):
    message: Message9
    name: Name156
    toolCallId: ToolCallId
    result: Result1
    error: Error2


class ToolCallResult1(BaseModel):
    type: str
    properties: Properties356
    required: List[str]


class Items181(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Results5(BaseModel):
    description: str
    type: str
    items: Items181


class Properties357(BaseModel):
    results: Results5
    error: Error2


class ServerMessageResponseToolCalls(BaseModel):
    type: str
    properties: Properties357


class Destination6(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Properties358(BaseModel):
    destination: Destination6
    error: Error2


class ServerMessageResponseTransferDestinationRequest(BaseModel):
    type: str
    properties: Properties358


class Data(BaseModel):
    type: str
    description: str


class Properties359(BaseModel):
    data: Data


class ServerMessageResponseVoiceRequest(BaseModel):
    type: str
    properties: Properties359
    required: List[str]


class MessageResponse(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Properties360(BaseModel):
    messageResponse: MessageResponse


class ServerMessageResponse(BaseModel):
    type: str
    properties: Properties360
    required: List[str]


class Message10(BaseModel):
    description: str
    allOf: List[AllOfItem]


class TriggerResponseEnabled(BaseModel):
    type: str
    description: str
    default: bool


class Properties361(BaseModel):
    type: Type60
    message: Message10
    triggerResponseEnabled: TriggerResponseEnabled


class ClientInboundMessageAddMessage(BaseModel):
    type: str
    properties: Properties361
    required: List[str]


class Control(BaseModel):
    type: str
    description: str
    enum: List[str]


class Properties362(BaseModel):
    type: Type60
    control: Control


class ClientInboundMessageControl(BaseModel):
    type: str
    properties: Properties362
    required: List[str]


class EndCallAfterSpoken(BaseModel):
    type: str
    description: str


class Properties363(BaseModel):
    type: Type60
    content: Content8
    endCallAfterSpoken: EndCallAfterSpoken


class ClientInboundMessageSay(BaseModel):
    type: str
    properties: Properties363


class Destination7(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Properties364(BaseModel):
    type: Type60
    destination: Destination7


class ClientInboundMessageTransfer(BaseModel):
    type: str
    properties: Properties364
    required: List[str]


class Message11(BaseModel):
    description: str
    oneOf: List[OneOfItem101]


class Properties365(BaseModel):
    message: Message11


class ClientInboundMessage(BaseModel):
    type: str
    properties: Properties365
    required: List[str]


class Role9(BaseModel):
    type: str
    description: str


class Message12(BaseModel):
    type: str
    description: str


class EndTime(BaseModel):
    type: str
    description: str


class SecondsFromStart(BaseModel):
    type: str
    description: str


class Duration(BaseModel):
    type: str
    description: str


class Properties366(BaseModel):
    role: Role9
    message: Message12
    time: Time1
    endTime: EndTime
    secondsFromStart: SecondsFromStart
    duration: Duration


class UserMessage(BaseModel):
    type: str
    properties: Properties366
    required: List[str]


class Properties367(BaseModel):
    role: Role9
    message: Message12
    time: Time1
    secondsFromStart: SecondsFromStart


class SystemMessage(BaseModel):
    type: str
    properties: Properties367
    required: List[str]


class Properties368(BaseModel):
    role: Role9
    message: Message12
    time: Time1
    endTime: EndTime
    secondsFromStart: SecondsFromStart
    source: Source
    duration: Duration


class BotMessage(BaseModel):
    type: str
    properties: Properties368
    required: List[str]


class Items182(BaseModel):
    type: str


class ToolCalls(BaseModel):
    description: str
    type: str
    items: Items182


class Properties369(BaseModel):
    role: Role9
    toolCalls: ToolCalls
    message: Message12
    time: Time1
    secondsFromStart: SecondsFromStart


class ToolCallMessage(BaseModel):
    type: str
    properties: Properties369
    required: List[str]


class Properties370(BaseModel):
    role: Role9
    toolCallId: ToolCallId
    name: Name156
    result: Result1
    time: Time1
    secondsFromStart: SecondsFromStart


class ToolCallResultMessage(BaseModel):
    type: str
    properties: Properties370
    required: List[str]


class Minutes(BaseModel):
    type: str
    description: str


class Properties371(BaseModel):
    type: Type60
    provider: Provider156
    minutes: Minutes
    cost: Cost


class TransportCost(BaseModel):
    type: str
    properties: Properties371
    required: List[str]


class Transcriber4(BaseModel):
    type: str
    description: str


class Properties372(BaseModel):
    type: Type60
    transcriber: Transcriber4
    minutes: Minutes
    cost: Cost


class TranscriberCost(BaseModel):
    type: str
    properties: Properties372
    required: List[str]


class PromptTokens(BaseModel):
    type: str
    description: str


class CompletionTokens(BaseModel):
    type: str
    description: str


class Properties373(BaseModel):
    type: Type60
    model: Model29
    promptTokens: PromptTokens
    completionTokens: CompletionTokens
    cost: Cost


class ModelCost(BaseModel):
    type: str
    properties: Properties373
    required: List[str]


class Voice4(BaseModel):
    type: str
    description: str


class Characters(BaseModel):
    type: str
    description: str


class Properties374(BaseModel):
    type: Type60
    voice: Voice4
    characters: Characters
    cost: Cost


class VoiceCost(BaseModel):
    type: str
    properties: Properties374
    required: List[str]


class SubType6(BaseModel):
    type: str
    description: str
    enum: List[str]


class Properties375(BaseModel):
    type: Type60
    subType: SubType6
    minutes: Minutes
    cost: Cost


class VapiCost(BaseModel):
    type: str
    properties: Properties375
    required: List[str]


class AnalysisType(BaseModel):
    type: str
    description: str
    enum: List[str]


class Properties376(BaseModel):
    type: Type60
    analysisType: AnalysisType
    model: Model29
    promptTokens: PromptTokens
    completionTokens: CompletionTokens
    cost: Cost


class AnalysisCost(BaseModel):
    type: str
    properties: Properties376
    required: List[str]


class Items183(BaseModel):
    oneOf: List[OneOfItem101]


class Messages52(BaseModel):
    type: str
    description: str
    items: Items183


class Type100(BaseModel):
    type: str
    enum: List[str]
    description: str


class ToolCall1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Function23(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server48(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties377(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages52
    type: Type100
    toolCall: ToolCall1
    function: Function23
    server: Server48


class FunctionToolWithToolCall(BaseModel):
    type: str
    properties: Properties377
    required: List[str]


class Items184(BaseModel):
    oneOf: List[OneOfItem101]


class Messages53(BaseModel):
    type: str
    description: str
    items: Items184


class Metadata18(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Function24(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server49(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties378(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages53
    type: Type100
    toolCall: ToolCall1
    metadata: Metadata18
    function: Function24
    server: Server49


class GhlToolWithToolCall(BaseModel):
    type: str
    properties: Properties378
    required: List[str]


class Items185(BaseModel):
    oneOf: List[OneOfItem101]


class Messages54(BaseModel):
    type: str
    description: str
    items: Items185


class Function25(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Server50(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Properties379(BaseModel):
    async_: Async = Field(..., alias='async')
    messages: Messages54
    type: Type100
    toolCall: ToolCall1
    metadata: Metadata18
    function: Function25
    server: Server50


class MakeToolWithToolCall(BaseModel):
    type: str
    properties: Properties379
    required: List[str]


class Type103(BaseModel):
    type: str
    enum: List[str]


class Items186(BaseModel):
    oneOf: List[OneOfItem101]


class Conditions6(BaseModel):
    type: str
    description: str
    items: Items186


class StepName1(BaseModel):
    type: str
    minLength: int


class Properties380(BaseModel):
    type: Type103
    conditions: Conditions6
    stepName: StepName1


class StepDestination(BaseModel):
    type: str
    properties: Properties380
    required: List[str]


class OneOfItem181(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    title: str
    description: Optional[str] = None


class Block(BaseModel):
    description: str
    oneOf: List[OneOfItem181]


class Type104(BaseModel):
    type: str
    description: str
    enum: List[str]


class OneOfItem182(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    title: str


class Items187(BaseModel):
    oneOf: List[OneOfItem182]


class Destinations2(BaseModel):
    type: str
    description: str
    items: Items187


class Name159(BaseModel):
    type: str
    description: str
    minLength: int


class BlockId(BaseModel):
    type: str
    description: str


class Properties381(BaseModel):
    block: Block
    type: Type104
    destinations: Destinations2
    name: Name159
    blockId: BlockId
    input: Input


class HandoffStep(BaseModel):
    type: str
    properties: Properties381
    required: List[str]


class Items188(BaseModel):
    oneOf: List[OneOfItem182]


class Conditions7(BaseModel):
    type: str
    description: str
    items: Items188


class Variable(BaseModel):
    type: str
    description: str


class Value4(BaseModel):
    type: str
    description: str
    maxLength: int


class Properties382(BaseModel):
    conditions: Conditions7
    type: Type104
    variable: Variable
    value: Value4


class AssignmentMutation(BaseModel):
    type: str
    properties: Properties382
    required: List[str]


class OneOfItem184(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    title: str
    description: Optional[str] = None


class Block1(BaseModel):
    description: str
    oneOf: List[OneOfItem184]


class OneOfItem185(BaseModel):
    field_ref: str = Field(..., alias='$ref')
    title: str


class Items189(BaseModel):
    oneOf: List[OneOfItem185]


class Mutations(BaseModel):
    type: str
    description: str
    items: Items189


class Properties383(BaseModel):
    block: Block1
    type: Type104
    mutations: Mutations
    name: Name159
    blockId: BlockId
    input: Input


class CallbackStep(BaseModel):
    type: str
    properties: Properties383
    required: List[str]


class Schemas(BaseModel):
    AssemblyAITranscriber: AssemblyAITranscriber
    Server: Server
    CustomTranscriber: CustomTranscriber
    DeepgramTranscriber: DeepgramTranscriber
    TalkscriberTranscriber: TalkscriberTranscriber
    GladiaTranscriber: GladiaTranscriber
    TextContent: TextContent
    Condition: Condition
    ToolMessageStart: ToolMessageStart
    ToolMessageComplete: ToolMessageComplete
    ToolMessageFailed: ToolMessageFailed
    ToolMessageDelayed: ToolMessageDelayed
    JsonSchema: JsonSchema
    OpenAIFunctionParameters: OpenAIFunctionParameters
    OpenAIFunction: OpenAIFunction
    CreateDtmfToolDTO: CreateDtmfToolDTO
    CreateEndCallToolDTO: CreateEndCallToolDTO
    CreateVoicemailToolDTO: CreateVoicemailToolDTO
    CreateFunctionToolDTO: CreateFunctionToolDTO
    GhlToolMetadata: GhlToolMetadata
    CreateGhlToolDTO: CreateGhlToolDTO
    MakeToolMetadata: MakeToolMetadata
    CreateMakeToolDTO: CreateMakeToolDTO
    CustomMessage: CustomMessage
    TransferDestinationAssistant: TransferDestinationAssistant
    TransferDestinationStep: TransferDestinationStep
    SummaryPlan: SummaryPlan
    TransferPlan: TransferPlan
    TransferDestinationNumber: TransferDestinationNumber
    TransferDestinationSip: TransferDestinationSip
    CreateTransferCallToolDTO: CreateTransferCallToolDTO
    CreateCustomKnowledgeBaseDTO: CreateCustomKnowledgeBaseDTO
    OpenAIMessage: OpenAIMessage
    AnyscaleModel: AnyscaleModel
    AnthropicModel: AnthropicModel
    CustomLLMModel: CustomLLMModel
    DeepInfraModel: DeepInfraModel
    GoogleModel: GoogleModel
    GroqModel: GroqModel
    InflectionAIModel: InflectionAIModel
    OpenAIModel: OpenAIModel
    OpenRouterModel: OpenRouterModel
    PerplexityAIModel: PerplexityAIModel
    TogetherAIModel: TogetherAIModel
    VapiModel: VapiModel
    XaiModel: XaiModel
    ExactReplacement: ExactReplacement
    RegexOption: RegexOption
    RegexReplacement: RegexReplacement
    FormatPlan: FormatPlan
    ChunkPlan: ChunkPlan
    FallbackPlan: FallbackPlan
    AzureVoice: AzureVoice
    CartesiaVoice: CartesiaVoice
    CustomVoice: CustomVoice
    DeepgramVoice: DeepgramVoice
    ElevenLabsVoice: ElevenLabsVoice
    LMNTVoice: LMNTVoice
    NeetsVoice: NeetsVoice
    OpenAIVoice: OpenAIVoice
    PlayHTVoice: PlayHTVoice
    RimeAIVoice: RimeAIVoice
    TavusConversationProperties: TavusConversationProperties
    TavusVoice: TavusVoice
    FallbackAzureVoice: FallbackAzureVoice
    FallbackCartesiaVoice: FallbackCartesiaVoice
    FallbackCustomVoice: FallbackCustomVoice
    FallbackDeepgramVoice: FallbackDeepgramVoice
    FallbackElevenLabsVoice: FallbackElevenLabsVoice
    FallbackLMNTVoice: FallbackLMNTVoice
    FallbackNeetsVoice: FallbackNeetsVoice
    FallbackOpenAIVoice: FallbackOpenAIVoice
    FallbackPlayHTVoice: FallbackPlayHTVoice
    FallbackRimeAIVoice: FallbackRimeAIVoice
    FallbackTavusVoice: FallbackTavusVoice
    TransportConfigurationTwilio: TransportConfigurationTwilio
    TwilioVoicemailDetection: TwilioVoicemailDetection
    StructuredDataPlan: StructuredDataPlan
    SuccessEvaluationPlan: SuccessEvaluationPlan
    AnalysisPlan: AnalysisPlan
    TranscriptPlan: TranscriptPlan
    ArtifactPlan: ArtifactPlan
    MessagePlan: MessagePlan
    AssistantCustomEndpointingRule: AssistantCustomEndpointingRule
    CustomerCustomEndpointingRule: CustomerCustomEndpointingRule
    BothCustomEndpointingRule: BothCustomEndpointingRule
    TranscriptionEndpointingPlan: TranscriptionEndpointingPlan
    StartSpeakingPlan: StartSpeakingPlan
    StopSpeakingPlan: StopSpeakingPlan
    MonitorPlan: MonitorPlan
    CreateAssistantDTO: CreateAssistantDTO
    AssistantOverrides: AssistantOverrides
    SquadMemberDTO: SquadMemberDTO
    CreateSquadDTO: CreateSquadDTO
    ImportTwilioPhoneNumberDTO: ImportTwilioPhoneNumberDTO
    CreateCustomerDTO: CreateCustomerDTO
    CreateCallDTO: CreateCallDTO
    AnalysisCostBreakdown: AnalysisCostBreakdown
    CostBreakdown: CostBreakdown
    Analysis: Analysis
    Monitor: Monitor
    Artifact: Artifact
    Transport: Transport1
    Call: Call
    PaginationMeta: PaginationMeta
    CallPaginatedResponse: CallPaginatedResponse
    CreateOutboundCallDTO: CreateOutboundCallDTO
    CreateWebCallDTO: CreateWebCallDTO
    UpdateCallDTO: UpdateCallDTO
    Assistant: Assistant5
    UpdateAssistantDTO: UpdateAssistantDTO
    ByoPhoneNumber: ByoPhoneNumber
    TwilioPhoneNumber: TwilioPhoneNumber1
    VonagePhoneNumber: VonagePhoneNumber
    SipAuthentication: SipAuthentication
    VapiPhoneNumber: VapiPhoneNumber
    CreateByoPhoneNumberDTO: CreateByoPhoneNumberDTO
    CreateTwilioPhoneNumberDTO: CreateTwilioPhoneNumberDTO
    CreateVonagePhoneNumberDTO: CreateVonagePhoneNumberDTO
    CreateVapiPhoneNumberDTO: CreateVapiPhoneNumberDTO
    BuyPhoneNumberDTO: BuyPhoneNumberDTO
    ImportVonagePhoneNumberDTO: ImportVonagePhoneNumberDTO
    PhoneNumberPaginatedResponse: PhoneNumberPaginatedResponse
    UpdatePhoneNumberDTO: UpdatePhoneNumberDTO
    AutoReloadPlan: AutoReloadPlan
    Subscription: Subscription
    UpdateSubscriptionDTO: UpdateSubscriptionDTO
    Payment: Payment
    PaymentsPaginatedResponse: PaymentsPaginatedResponse
    SubscriptionMonthlyCharge: SubscriptionMonthlyCharge
    CreditsBuyDTO: CreditsBuyDTO
    AutoReloadPlanDTO: AutoReloadPlanDTO
    PaymentRetryDTO: PaymentRetryDTO
    SubscriptionConcurrencyLineBuyDTO: SubscriptionConcurrencyLineBuyDTO
    SubscriptionConcurrencyLineRemoveDTO: SubscriptionConcurrencyLineRemoveDTO
    HipaaBuyDTO: HipaaBuyDTO
    SubscriptionCouponAddDTO: SubscriptionCouponAddDTO
    Squad: Squad4
    UpdateSquadDTO: UpdateSquadDTO
    TrieveKnowledgeBaseVectorStoreSearchPlan: TrieveKnowledgeBaseVectorStoreSearchPlan
    TrieveKnowledgeBaseVectorStoreCreatePlan: TrieveKnowledgeBaseVectorStoreCreatePlan
    TrieveKnowledgeBase: TrieveKnowledgeBase
    CustomKnowledgeBase: CustomKnowledgeBase
    CreateTrieveKnowledgeBaseDTO: CreateTrieveKnowledgeBaseDTO
    ConversationBlock: ConversationBlock
    ToolCallBlock: ToolCallBlock
    WorkflowBlock: WorkflowBlock
    RuleBasedCondition: RuleBasedCondition
    ModelBasedCondition: ModelBasedCondition
    BlockStartMessage: BlockStartMessage
    BlockCompleteMessage: BlockCompleteMessage
    CreateConversationBlockDTO: CreateConversationBlockDTO
    CreateToolCallBlockDTO: CreateToolCallBlockDTO
    CreateWorkflowBlockDTO: CreateWorkflowBlockDTO
    UpdateBlockDTO: UpdateBlockDTO
    DtmfTool: DtmfTool
    EndCallTool: EndCallTool
    FunctionTool: FunctionTool
    GhlTool: GhlTool
    MakeTool: MakeTool
    TransferCallTool: TransferCallTool
    OutputTool: OutputTool
    BashTool: BashTool
    ComputerTool: ComputerTool
    TextEditorTool: TextEditorTool
    CreateOutputToolDTO: CreateOutputToolDTO
    CreateBashToolDTO: CreateBashToolDTO
    CreateComputerToolDTO: CreateComputerToolDTO
    CreateTextEditorToolDTO: CreateTextEditorToolDTO
    UpdateToolDTO: UpdateToolDTO
    CreateFileDTO: CreateFileDTO
    File: File1
    UpdateFileDTO: UpdateFileDTO
    Metrics: Metrics
    TimeRange: TimeRange
    AnalyticsOperation: AnalyticsOperation
    AnalyticsQuery: AnalyticsQuery
    AnalyticsQueryDTO: AnalyticsQueryDTO
    AnalyticsQueryResult: AnalyticsQueryResult
    CallLogPrivileged: CallLogPrivileged
    CallLogsPaginatedResponse: CallLogsPaginatedResponse
    Error: Error
    Log: Log1
    LogsPaginatedResponse: LogsPaginatedResponse
    ChatDTO: ChatDTO
    AnthropicCredential: AnthropicCredential
    AnyscaleCredential: AnyscaleCredential
    AssemblyAICredential: AssemblyAICredential
    AzureCredential: AzureCredential
    AzureOpenAICredential: AzureOpenAICredential
    SipTrunkGateway: SipTrunkGateway
    SipTrunkOutboundSipRegisterPlan: SipTrunkOutboundSipRegisterPlan
    SipTrunkOutboundAuthenticationPlan: SipTrunkOutboundAuthenticationPlan
    SbcConfiguration: SbcConfiguration
    ByoSipTrunkCredential: ByoSipTrunkCredential
    CartesiaCredential: CartesiaCredential
    OAuth2AuthenticationPlan: OAuth2AuthenticationPlan
    Oauth2AuthenticationSession: Oauth2AuthenticationSession
    CustomLLMCredential: CustomLLMCredential
    DeepgramCredential: DeepgramCredential
    DeepInfraCredential: DeepInfraCredential
    ElevenLabsCredential: ElevenLabsCredential
    GcpKey: GcpKey
    BucketPlan: BucketPlan
    GcpCredential: GcpCredential
    GladiaCredential: GladiaCredential
    GoHighLevelCredential: GoHighLevelCredential
    GoogleCredential: GoogleCredential
    GroqCredential: GroqCredential
    InflectionAICredential: InflectionAICredential
    LangfuseCredential: LangfuseCredential
    LmntCredential: LmntCredential
    MakeCredential: MakeCredential
    OpenAICredential: OpenAICredential
    OpenRouterCredential: OpenRouterCredential
    PerplexityAICredential: PerplexityAICredential
    PlayHTCredential: PlayHTCredential
    RimeAICredential: RimeAICredential
    RunpodCredential: RunpodCredential
    S3Credential: S3Credential
    TavusCredential: TavusCredential
    TogetherAICredential: TogetherAICredential
    TwilioCredential: TwilioCredential
    VonageCredential: VonageCredential
    WebhookCredential: WebhookCredential
    XAiCredential: XAiCredential
    CreateAnthropicCredentialDTO: CreateAnthropicCredentialDTO
    CreateAnyscaleCredentialDTO: CreateAnyscaleCredentialDTO
    CreateAssemblyAICredentialDTO: CreateAssemblyAICredentialDTO
    CreateAzureCredentialDTO: CreateAzureCredentialDTO
    CreateAzureOpenAICredentialDTO: CreateAzureOpenAICredentialDTO
    CreateByoSipTrunkCredentialDTO: CreateByoSipTrunkCredentialDTO
    CreateCartesiaCredentialDTO: CreateCartesiaCredentialDTO
    CreateCustomLLMCredentialDTO: CreateCustomLLMCredentialDTO
    CreateDeepgramCredentialDTO: CreateDeepgramCredentialDTO
    CreateDeepInfraCredentialDTO: CreateDeepInfraCredentialDTO
    CreateElevenLabsCredentialDTO: CreateElevenLabsCredentialDTO
    CreateGcpCredentialDTO: CreateGcpCredentialDTO
    CreateGladiaCredentialDTO: CreateGladiaCredentialDTO
    CreateGoHighLevelCredentialDTO: CreateGoHighLevelCredentialDTO
    CreateGoogleCredentialDTO: CreateGoogleCredentialDTO
    CreateGroqCredentialDTO: CreateGroqCredentialDTO
    CreateInflectionAICredentialDTO: CreateInflectionAICredentialDTO
    CreateLangfuseCredentialDTO: CreateLangfuseCredentialDTO
    CreateLmntCredentialDTO: CreateLmntCredentialDTO
    CreateMakeCredentialDTO: CreateMakeCredentialDTO
    CreateOpenAICredentialDTO: CreateOpenAICredentialDTO
    CreateOpenRouterCredentialDTO: CreateOpenRouterCredentialDTO
    CreatePerplexityAICredentialDTO: CreatePerplexityAICredentialDTO
    CreatePlayHTCredentialDTO: CreatePlayHTCredentialDTO
    CreateRimeAICredentialDTO: CreateRimeAICredentialDTO
    CreateRunpodCredentialDTO: CreateRunpodCredentialDTO
    CreateS3CredentialDTO: CreateS3CredentialDTO
    CreateTavusCredentialDTO: CreateTavusCredentialDTO
    CreateTogetherAICredentialDTO: CreateTogetherAICredentialDTO
    CreateTwilioCredentialDTO: CreateTwilioCredentialDTO
    CreateVonageCredentialDTO: CreateVonageCredentialDTO
    CreateWebhookCredentialDTO: CreateWebhookCredentialDTO
    CreateXAiCredentialDTO: CreateXAiCredentialDTO
    UpdateAnthropicCredentialDTO: UpdateAnthropicCredentialDTO
    UpdateAnyscaleCredentialDTO: UpdateAnyscaleCredentialDTO
    UpdateAssemblyAICredentialDTO: UpdateAssemblyAICredentialDTO
    UpdateAzureCredentialDTO: UpdateAzureCredentialDTO
    UpdateAzureOpenAICredentialDTO: UpdateAzureOpenAICredentialDTO
    UpdateByoSipTrunkCredentialDTO: UpdateByoSipTrunkCredentialDTO
    UpdateCartesiaCredentialDTO: UpdateCartesiaCredentialDTO
    UpdateCustomLLMCredentialDTO: UpdateCustomLLMCredentialDTO
    UpdateDeepgramCredentialDTO: UpdateDeepgramCredentialDTO
    UpdateDeepInfraCredentialDTO: UpdateDeepInfraCredentialDTO
    UpdateElevenLabsCredentialDTO: UpdateElevenLabsCredentialDTO
    UpdateGcpCredentialDTO: UpdateGcpCredentialDTO
    UpdateGladiaCredentialDTO: UpdateGladiaCredentialDTO
    UpdateGoHighLevelCredentialDTO: UpdateGoHighLevelCredentialDTO
    UpdateGoogleCredentialDTO: UpdateGoogleCredentialDTO
    UpdateGroqCredentialDTO: UpdateGroqCredentialDTO
    UpdateInflectionAICredentialDTO: UpdateInflectionAICredentialDTO
    UpdateLangfuseCredentialDTO: UpdateLangfuseCredentialDTO
    UpdateLmntCredentialDTO: UpdateLmntCredentialDTO
    UpdateMakeCredentialDTO: UpdateMakeCredentialDTO
    UpdateOpenAICredentialDTO: UpdateOpenAICredentialDTO
    UpdateOpenRouterCredentialDTO: UpdateOpenRouterCredentialDTO
    UpdatePerplexityAICredentialDTO: UpdatePerplexityAICredentialDTO
    UpdatePlayHTCredentialDTO: UpdatePlayHTCredentialDTO
    UpdateRimeAICredentialDTO: UpdateRimeAICredentialDTO
    UpdateRunpodCredentialDTO: UpdateRunpodCredentialDTO
    UpdateS3CredentialDTO: UpdateS3CredentialDTO
    UpdateTavusCredentialDTO: UpdateTavusCredentialDTO
    UpdateTogetherAICredentialDTO: UpdateTogetherAICredentialDTO
    UpdateTwilioCredentialDTO: UpdateTwilioCredentialDTO
    UpdateVonageCredentialDTO: UpdateVonageCredentialDTO
    UpdateXAiCredentialDTO: UpdateXAiCredentialDTO
    CreateOrgDTO: CreateOrgDTO
    OrgPlan: OrgPlan
    Org: Org
    UpdateOrgDTO: UpdateOrgDTO
    User: User
    InviteUserDTO: InviteUserDTO
    OrgWithOrgUser: OrgWithOrgUser
    UpdateUserRoleDTO: UpdateUserRoleDTO
    VoiceLibraryVoiceResponse: VoiceLibraryVoiceResponse
    AddVoiceToProviderDTO: AddVoiceToProviderDTO
    VoiceLibrary: VoiceLibrary
    CloneVoiceDTO: CloneVoiceDTO
    ToolTemplateSetup: ToolTemplateSetup
    MakeToolProviderDetails: MakeToolProviderDetails
    GhlToolProviderDetails: GhlToolProviderDetails
    FunctionToolProviderDetails: FunctionToolProviderDetails
    ToolTemplateMetadata: ToolTemplateMetadata
    CreateToolTemplateDTO: CreateToolTemplateDTO
    Template: Template
    UpdateToolTemplateDTO: UpdateToolTemplateDTO
    TokenRestrictions: TokenRestrictions
    CreateTokenDTO: CreateTokenDTO
    Token: Token
    SyncVoiceLibraryDTO: SyncVoiceLibraryDTO
    CreateEnterpriseInfoDTO: CreateEnterpriseInfoDTO
    EnterpriseInfo: EnterpriseInfo
    ClientMessageConversationUpdate: ClientMessageConversationUpdate
    ClientMessageHang: ClientMessageHang
    ClientMessageMetadata: ClientMessageMetadata
    ClientMessageModelOutput: ClientMessageModelOutput
    ClientMessageSpeechUpdate: ClientMessageSpeechUpdate
    ClientMessageTranscript: ClientMessageTranscript
    ToolCallFunction: ToolCallFunction
    ToolCall: ToolCall
    ClientMessageToolCalls: ClientMessageToolCalls
    ClientMessageToolCallsResult: ClientMessageToolCallsResult
    ClientMessageTransferUpdate: ClientMessageTransferUpdate
    ClientMessageUserInterrupted: ClientMessageUserInterrupted
    ClientMessageLanguageChangeDetected: ClientMessageLanguageChangeDetected
    ClientMessageVoiceInput: ClientMessageVoiceInput
    ClientMessage: ClientMessage
    ServerMessageAssistantRequest: ServerMessageAssistantRequest
    ServerMessageConversationUpdate: ServerMessageConversationUpdate
    ServerMessageEndOfCallReport: ServerMessageEndOfCallReport
    ServerMessageHang: ServerMessageHang
    ServerMessageKnowledgeBaseRequest: ServerMessageKnowledgeBaseRequest
    ServerMessageModelOutput: ServerMessageModelOutput
    ServerMessagePhoneCallControl: ServerMessagePhoneCallControl
    ServerMessageSpeechUpdate: ServerMessageSpeechUpdate
    ServerMessageStatusUpdate: ServerMessageStatusUpdate
    ServerMessageToolCalls: ServerMessageToolCalls
    ServerMessageTransferDestinationRequest: ServerMessageTransferDestinationRequest
    ServerMessageTransferUpdate: ServerMessageTransferUpdate
    ServerMessageTranscript: ServerMessageTranscript
    ServerMessageUserInterrupted: ServerMessageUserInterrupted
    ServerMessageLanguageChangeDetected: ServerMessageLanguageChangeDetected
    ServerMessageVoiceInput: ServerMessageVoiceInput
    ServerMessageVoiceRequest: ServerMessageVoiceRequest
    ServerMessage: ServerMessage
    ServerMessageResponseAssistantRequest: ServerMessageResponseAssistantRequest
    KnowledgeBaseResponseDocument: KnowledgeBaseResponseDocument
    ServerMessageResponseKnowledgeBaseRequest: ServerMessageResponseKnowledgeBaseRequest
    ToolCallResult: ToolCallResult1
    ServerMessageResponseToolCalls: ServerMessageResponseToolCalls
    ServerMessageResponseTransferDestinationRequest: (
        ServerMessageResponseTransferDestinationRequest
    )
    ServerMessageResponseVoiceRequest: ServerMessageResponseVoiceRequest
    ServerMessageResponse: ServerMessageResponse
    ClientInboundMessageAddMessage: ClientInboundMessageAddMessage
    ClientInboundMessageControl: ClientInboundMessageControl
    ClientInboundMessageSay: ClientInboundMessageSay
    ClientInboundMessageTransfer: ClientInboundMessageTransfer
    ClientInboundMessage: ClientInboundMessage
    UserMessage: UserMessage
    SystemMessage: SystemMessage
    BotMessage: BotMessage
    ToolCallMessage: ToolCallMessage
    ToolCallResultMessage: ToolCallResultMessage
    TransportCost: TransportCost
    TranscriberCost: TranscriberCost
    ModelCost: ModelCost
    VoiceCost: VoiceCost
    VapiCost: VapiCost
    AnalysisCost: AnalysisCost
    FunctionToolWithToolCall: FunctionToolWithToolCall
    GhlToolWithToolCall: GhlToolWithToolCall
    MakeToolWithToolCall: MakeToolWithToolCall
    StepDestination: StepDestination
    HandoffStep: HandoffStep
    AssignmentMutation: AssignmentMutation
    CallbackStep: CallbackStep


class Components(BaseModel):
    securitySchemes: SecuritySchemes
    schemas: Schemas


class Model(BaseModel):
    components: Components
